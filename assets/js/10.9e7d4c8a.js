(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{284:function(t,v,_){"use strict";_.r(v);var a=_(14),r=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"git概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git概述"}},[t._v("#")]),t._v(" Git概述")]),t._v(" "),v("p",[t._v("Git是一个免费的、开源的分布式版本控制系统，可以快速高效地处理从小型到大型的各种项目。")]),t._v(" "),v("p",[t._v("Git 易于学习，占地面积小，性能极快。它具有廉价的本地库，方便的暂存区域和多个工作流分支等特性。其性能优于Subversion、CVS、Perforce和 ClearCase等版本控制工具。")]),t._v(" "),v("h2",{attrs:{id:"什么是版本控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是版本控制"}},[t._v("#")]),t._v(" 什么是版本控制")]),t._v(" "),v("p",[t._v("版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。")]),t._v(" "),v("p",[t._v("版本控制其实最重要的是可以记录文件修改历史记录，从而让用户能够查看历史版本，方便版本切换。")]),t._v(" "),v("p",[v("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220725162343436.png",alt:"image-20220725162343436"}})]),t._v(" "),v("h2",{attrs:{id:"为啥需要版本控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为啥需要版本控制"}},[t._v("#")]),t._v(" 为啥需要版本控制")]),t._v(" "),v("p",[v("img",{attrs:{src:"C:%5CUsers%5Cyuliangshuji%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220725162943506.png",alt:"image-20220725162943506"}})]),t._v(" "),v("p",[t._v("从个人开发过渡到团队开发。")]),t._v(" "),v("h1",{attrs:{id:"git常用命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" Git常用命令")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令名称")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git config --global user.name 用户名")]),t._v(" "),v("td",[t._v("设置用户签名")])]),t._v(" "),v("tr",[v("td",[t._v("git config --global user.email 邮箱")]),t._v(" "),v("td",[t._v("设置用户签名")])]),t._v(" "),v("tr",[v("td",[t._v("git init")]),t._v(" "),v("td",[t._v("初始化本地库")])]),t._v(" "),v("tr",[v("td",[t._v("git statuse")]),t._v(" "),v("td",[t._v("查看本地库状态")])]),t._v(" "),v("tr",[v("td",[t._v("git add 文件名")]),t._v(" "),v("td",[t._v("添加到暂存区")])]),t._v(" "),v("tr",[v("td",[t._v('git commit -m "日志信息”文件名')]),t._v(" "),v("td",[t._v("提交到本地库")])]),t._v(" "),v("tr",[v("td",[t._v("git reflog")]),t._v(" "),v("td",[t._v("查看历史记录")])]),t._v(" "),v("tr",[v("td",[t._v("git reset --hard 版本号")]),t._v(" "),v("td",[t._v("版本穿梭")])])])]),t._v(" "),v("h1",{attrs:{id:"git分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git分支"}},[t._v("#")]),t._v(" Git分支")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令名称")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git branch 分支名")]),t._v(" "),v("td",[t._v("创建分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch -v")]),t._v(" "),v("td",[t._v("查看分支")])]),t._v(" "),v("tr",[v("td",[t._v("git checkout 分支名")]),t._v(" "),v("td",[t._v("切换分支")])]),t._v(" "),v("tr",[v("td",[t._v("git merge 分支名")]),t._v(" "),v("td",[t._v("把指定的分支合并到当前分支上")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("当合并分支产生冲突时，经修改冲突后，提交文件时，不能再带上文件名。")])]),t._v(" "),v("h1",{attrs:{id:"远程库操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#远程库操作"}},[t._v("#")]),t._v(" 远程库操作")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("命令名称")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git remote -v")]),t._v(" "),v("td",[t._v("查看当前所有远程地址别名")])]),t._v(" "),v("tr",[v("td",[t._v("git remote add 别名 远程地址")]),t._v(" "),v("td",[t._v("起别名")])]),t._v(" "),v("tr",[v("td",[t._v("git push 别名 分支")]),t._v(" "),v("td",[t._v("推送本地分支上的内容到远程仓库")])]),t._v(" "),v("tr",[v("td",[t._v("git clone 远程地址")]),t._v(" "),v("td",[t._v("将远程仓库的内容克隆到本地")])]),t._v(" "),v("tr",[v("td",[t._v("git pull 远程库地址别名远程分支名")]),t._v(" "),v("td",[t._v("将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);