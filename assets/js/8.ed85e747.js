(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{286:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-数组"}},[t._v("#")]),t._v(" 一.数组")]),t._v(" "),s("h2",{attrs:{id:"数组定义格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组定义格式"}},[t._v("#")]),t._v(" 数组定义格式")]),t._v(" "),s("p",[t._v("定义：数组(array)是存储多个相同类型数据的存储模型。")]),t._v(" "),s("p",[t._v("数组的定义格式：")]),t._v(" "),s("ul",[s("li",[t._v("格式一：数据类型[] 变量名")]),t._v(" "),s("li",[t._v("范例：int[] arr")]),t._v(" "),s("li",[t._v("格式二：数据类型 变量名[]")]),t._v(" "),s("li",[t._v("范例：int arr[]")])]),t._v(" "),s("h2",{attrs:{id:"数组初始化之动态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组初始化之动态初始化"}},[t._v("#")]),t._v(" 数组初始化之动态初始化")]),t._v(" "),s("p",[t._v("定义：Java中的数组必须先初始化，然后才能使用。")]),t._v(" "),s("p",[t._v("所谓初始化：就是为数组中的数组元素分配内存空间，并为每个数组元素赋值。")]),t._v(" "),s("p",[t._v("动态初始化：初始化时只指定数组的长度，由系统为数组分配初始值。")]),t._v(" "),s("ul",[s("li",[t._v("格式：数据类型[] 变量名 = new 数据类型[长度]；")]),t._v(" "),s("li",[t._v("范例：int[] arr = new int[3];")])]),t._v(" "),s("h2",{attrs:{id:"数组元素访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组元素访问"}},[t._v("#")]),t._v(" 数组元素访问")]),t._v(" "),s("ul",[s("li",[t._v("数组变量访问方式")]),t._v(" "),s("li",[t._v("格式：数组名")]),t._v(" "),s("li",[t._v("数组内部元素访问方式")]),t._v(" "),s("li",[t._v("格式：数组名[索引]")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"访问数组名："')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"访问数组内部元素"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存分配"}},[t._v("#")]),t._v(" 内存分配")]),t._v(" "),s("p",[t._v("Java程序在运行时，需要在内存中分配空间。为了提高运算效率，就对空间进行了不同区域的划分,因为每一片区域都有特定的处理数据方式和内存管理方式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220705221543108.png",alt:"image-20220705221543108"}})]),t._v(" "),s("ul",[s("li",[t._v("栈内存:存储局部变量，定义在方法中的变量，使用完毕，立即消失")]),t._v(" "),s("li",[t._v("堆内存:存储new出来的内容(实体，对象)数组在初始化时，会为存储空间添加默认值\n"),s("ul",[s("li",[t._v("整数：0")]),t._v(" "),s("li",[t._v("浮点数：0.0")]),t._v(" "),s("li",[t._v("布尔：false")]),t._v(" "),s("li",[t._v("字符：空字符")]),t._v(" "),s("li",[t._v("引用数据类型：null")])])])]),t._v(" "),s("p",[t._v("定义在方法中的变量，例如: arr使用完毕，立即消失")]),t._v(" "),s("p",[t._v("堆内存:存储new出来的内容(实体，对象)数组在初始化时，会为存储空间添加默认值")]),t._v(" "),s("ul",[s("li",[t._v("整数:0")]),t._v(" "),s("li",[t._v("浮点数:0.0布尔: false")])]),t._v(" "),s("p",[t._v("每一个new出来的东西都有一个地址值使用完毕，会在垃圾回收器空闲时被回收")]),t._v(" "),s("h2",{attrs:{id:"数组初始化之静态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组初始化之静态初始化"}},[t._v("#")]),t._v(" 数组初始化之静态初始化")]),t._v(" "),s("p",[t._v("静态初始化:初始化时指定每个数组元素的初始值，由系统决定数组长度。")]),t._v(" "),s("p",[t._v("格式：数据类型[] 变量名 = new 数据类型[]{数据1,数据2...}")]),t._v(" "),s("p",[t._v("范例：int[] arr = new int[]{1,2,3};")]),t._v(" "),s("p",[t._v("简化格式：int[] arr = {1,2,3}")]),t._v(" "),s("h2",{attrs:{id:"数组操作的两个常见的小问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组操作的两个常见的小问题"}},[t._v("#")]),t._v(" 数组操作的两个常见的小问题")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("索引越界：访问了数组中不存在的索引对应的元素，造成索引越界问题")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220705222512315.png",alt:"image-20220705222512315"}})])]),t._v(" "),s("li",[s("p",[t._v("空指针异常：访问的数组已经不再指向堆内存的数据，造成空指针异常")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220705222711159.png",alt:"image-20220705222711159"}})])])]),t._v(" "),s("p",[t._v("null：空值，引用数据类型的默认值，表示不指向任何有效对象")]),t._v(" "),s("h2",{attrs:{id:"数组常见操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组常见操作"}},[t._v("#")]),t._v(" 数组常见操作")]),t._v(" "),s("ul",[s("li",[t._v("遍历")]),t._v(" "),s("li",[t._v("获取数组元素数量\n"),s("ul",[s("li",[t._v("数组名.length")]),t._v(" "),s("li",[t._v("范例：arr.length")])])]),t._v(" "),s("li",[t._v("获取最值")])]),t._v(" "),s("h2",{attrs:{id:"数组常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组常用方法"}},[t._v("#")]),t._v(" 数组常用方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数组转字符串")]),t._v(" "),s("ul",[s("li",[t._v("Arrays.toString(数组名)")])])]),t._v(" "),s("li",[s("p",[t._v("判断数组内部是否包含某个值")]),t._v(" "),s("ul",[s("li",[t._v("Arrays.asList(数组名).contains(值)")])])]),t._v(" "),s("li",[s("p",[t._v("复制数组")]),t._v(" "),s("ul",[s("li",[t._v("Arrays.copyOfRange(数组名,起始下标,截止下表\t)")]),t._v(" "),s("li",[t._v("clone()方法： 创建并返回此对象的副本。")])])]),t._v(" "),s("li",[s("p",[t._v("数组排序")]),t._v(" "),s("ul",[s("li",[t._v("Arrays.sort(数组名)")])])]),t._v(" "),s("li",[s("p",[t._v("合并数组")]),t._v(" "),s("ul",[s("li",[t._v("ArrayUtils.addAll(数组1,数组2);")])])]),t._v(" "),s("li",[s("p",[t._v("拼接数组元素")]),t._v(" "),s("ul",[s("li",[t._v("StringUtils.join(数组名,'分隔符')")]),t._v(" "),s("li",[t._v("数组名.join('分隔符')")])])]),t._v(" "),s("li",[s("p",[t._v("ArrayList 转换成数组")]),t._v(" "),s("ul",[s("li",[t._v("arrayList.toArray(数组名);")])])]),t._v(" "),s("li",[s("p",[t._v("数组转Set")]),t._v(" "),s("ul",[s("li",[t._v("Set"),s("String",[t._v(" set = new HashSet"),s("String",[t._v("(Arrays.asList(stringArray));")])],1)],1)])]),t._v(" "),s("li",[s("p",[t._v("反转数组")]),t._v(" "),s("ul",[s("li",[t._v("reverse(数组名)")])])]),t._v(" "),s("li",[s("p",[t._v("移除数组中的元素")]),t._v(" "),s("ul",[s("li",[t._v("ArrayUtils.removeElement(intArray, 3);")])])])]),t._v(" "),s("h1",{attrs:{id:"二-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-string"}},[t._v("#")]),t._v(" 二.String")]),t._v(" "),s("p",[t._v("String类在java.lang包下，所以使用的时候不需要导包。")]),t._v(" "),s("p",[t._v("String类代表字符串，Java程序中的所有字符串文字（例如“abc”)都被实现为此类的实例也就是说，Java程序中所有的双引号字符串，都是String类的对象。")]),t._v(" "),s("p",[s("strong",[t._v("字符串的特点")])]),t._v(" "),s("ul",[s("li",[t._v("字符串不可变，它们的值在创建后不能被更改。")]),t._v(" "),s("li",[t._v("虽然String的值是不可变的，但是它们可以被共享。")]),t._v(" "),s("li",[t._v("字符串效果上相当于字符数组( char[])，但是底层原理是字节数组( byte[])。")]),t._v(" "),s("li",[t._v("JDK8及以前是字符数组，JDK9及以后是字节数组。")])]),t._v(" "),s("h2",{attrs:{id:"string构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string构造方法"}},[t._v("#")]),t._v(" String构造方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public String()")]),t._v(" "),s("td",[t._v("创建一个空白字符串对象，不含有内核内容")])]),t._v(" "),s("tr",[s("td",[t._v("public String(char[] chs)")]),t._v(" "),s("td",[t._v("根据字符数组的内容，来创建字符串对象")])]),t._v(" "),s("tr",[s("td",[t._v("public String(byte[] bys)")]),t._v(" "),s("td",[t._v("根据字节数组的内容，来创建字符串对象")])]),t._v(" "),s("tr",[s("td",[t._v('String s = "abc"')]),t._v(" "),s("td",[t._v("直接赋值的方式创建字符串对象，内容就是abc")])])])]),t._v(" "),s("h2",{attrs:{id:"string对象的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string对象的特点"}},[t._v("#")]),t._v(" String对象的特点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("通过new创建的字符串对象，每一次new都会申请一个内存空间，虽然内容相同，但是地址值不同。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s3 != s4")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("​\t\t\t上面的代码中，JVM会首先创建一个字符数组，然后每一次new的时候都会有一个新的地址，只不过s1\t\t\t和s2参考的字符串内容是相同的")]),t._v(" "),s("h2",{attrs:{id:"字符串的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的比较"}},[t._v("#")]),t._v(" 字符串的比较")]),t._v(" "),s("p",[t._v("使用==做比较")]),t._v(" "),s("ul",[s("li",[t._v("基本类型：比较的是数据值是否相同。")]),t._v(" "),s("li",[t._v("引用类型：比较的是数据地址是否相同。")])]),t._v(" "),s("p",[t._v("字符串是对象，它比较内容是否相同，是通过一个方法来实现的，这个方法叫: equals()")]),t._v(" "),s("p",[t._v("**public boolean equals(0bject anObject)**将此字符串与指定对象进行比较。由于我们比较的是字符串对象，所以参数直接传递一个字符串。")]),t._v(" "),s("h2",{attrs:{id:"遍历字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历字符串"}},[t._v("#")]),t._v(" 遍历字符串")]),t._v(" "),s("p",[t._v("遍历字符串，首先要能够获取到字符串中的每一个字符。")]),t._v(" "),s("p",[t._v("public char charAt(int index); 返回指定索引处的char值，字符串的索引也是从0开始的.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" abc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我喜欢你"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"三-stringbuilder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-stringbuilder"}},[t._v("#")]),t._v(" 三.StringBuilder")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220706182107450.png",alt:"image-20220706182107450"}})]),t._v(" "),s("p",[t._v("如果对字符串进行拼接操作，每次拼接，都会构建一个新的String对象，既耗时，又浪费内存空间，而这种操作还不可避免。那么有没有一种比较子的方式可以解决这个问题呢?答案是肯定的，我们可以通过Java提供的"),s("code",[t._v("StringBuilder")]),t._v("类就来解决这个问题。")]),t._v(" "),s("h2",{attrs:{id:"构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public StringBuilder()")]),t._v(" "),s("td",[t._v("创建一个空白可变字符串对象，不含有任何内容")])]),t._v(" "),s("tr",[s("td",[t._v("public StringBuilder(String str)")]),t._v(" "),s("td",[t._v("根据字符串的内容，来创建可变字符串对象")])])])]),t._v(" "),s("h2",{attrs:{id:"添加和反转方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加和反转方法"}},[t._v("#")]),t._v(" 添加和反转方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public StringBuilder append(任意类型)")]),t._v(" "),s("td",[t._v("添加数据，并返回对象本身")])]),t._v(" "),s("tr",[s("td",[t._v("public StringBuilder reverse()")]),t._v(" "),s("td",[t._v("返回相反的字符序列")])])])]),t._v(" "),s("h2",{attrs:{id:"stringbuilder和string互相转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder和string互相转换"}},[t._v("#")]),t._v(" Stringbuilder和String互相转换")]),t._v(" "),s("ul",[s("li",[t._v("StringBuilder转String\n"),s("ul",[s("li",[t._v("public String toString():通过toString()就可以实现把StringBuilder转换为String")])])]),t._v(" "),s("li",[t._v("String转StringBuilder\n"),s("ul",[s("li",[t._v("public StringBuilder(String s):通过构造方法就可以实现把String转换为StringBuilder")])])])]),t._v(" "),s("h1",{attrs:{id:"四-math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-math"}},[t._v("#")]),t._v(" 四.Math")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("Math包含执行基本数字运算的方法。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public static int abs(int a)")]),t._v(" "),s("td",[t._v("返回参数的绝对值")])]),t._v(" "),s("tr",[s("td",[t._v("public static double ceil(double a)")]),t._v(" "),s("td",[t._v("返回大于或等于参数的最小double值，等于一个整数")])]),t._v(" "),s("tr",[s("td",[t._v("public static double floor(double a)")]),t._v(" "),s("td",[t._v("返回小于或等于参数的最小double值，等于一个整数")])]),t._v(" "),s("tr",[s("td",[t._v("public static int round(float a)")]),t._v(" "),s("td",[t._v("按照四舍五入返回最接近参数的int")])]),t._v(" "),s("tr",[s("td",[t._v("public static int max(int a,int b)")]),t._v(" "),s("td",[t._v("返回两个int值之中的最大值")])]),t._v(" "),s("tr",[s("td",[t._v("public static int min(int a,int b)")]),t._v(" "),s("td",[t._v("返回两个int值之中的最小值")])]),t._v(" "),s("tr",[s("td",[t._v("public static double pow(double a,double b)")]),t._v(" "),s("td",[t._v("返回a的b次幂的值")])]),t._v(" "),s("tr",[s("td",[t._v("public static double random()")]),t._v(" "),s("td",[t._v("返回double的正值[0.0,1.0)")])])])]),t._v(" "),s("h1",{attrs:{id:"五-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五-system"}},[t._v("#")]),t._v(" 五.System")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("System包含几个有用的类字段和方法，它不能被实例化。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public static void exit(int status)")]),t._v(" "),s("td",[t._v("终止当前运行的Java虚拟机，非0表示异常终止")])]),t._v(" "),s("tr",[s("td",[t._v("public static long currentTimeMillis")]),t._v(" "),s("td",[t._v("返回当前时间(以毫秒为单位)")])])])]),t._v(" "),s("h1",{attrs:{id:"六-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六-object"}},[t._v("#")]),t._v(" 六.Object")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("Object是类层次结构的根，每个类都可以将Object作为超类。所有类都直接或者间接的继承自该类。")]),t._v(" "),s("p",[t._v("构造方法: public Object()")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public boolean equals(Object o)")]),t._v(" "),s("td",[t._v("比较两个引用类型的值是否相等，返回boolean值")])]),t._v(" "),s("tr",[s("td",[t._v("public String toString(Object o)")]),t._v(" "),s("td",[t._v("将参数值转换为String类型的值")])])])]),t._v(" "),s("h1",{attrs:{id:"七-arrays"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七-arrays"}},[t._v("#")]),t._v(" 七.Arrays")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("Arravs类包含用干损作数组的各种方法。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public static String toString(int[] a)")]),t._v(" "),s("td",[t._v("返回指定数组的内容的字符串表示形式")])]),t._v(" "),s("tr",[s("td",[t._v("public static void sort(int[] a)")]),t._v(" "),s("td",[t._v("按照数字顺序排列指定的数组")])])])]),t._v(" "),s("h1",{attrs:{id:"八-基本类型包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八-基本类型包装类"}},[t._v("#")]),t._v(" 八.基本类型包装类")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("将基本数据类型封装宓对象的好处在于可以在对象中定义更多的功能方法操作该数据。")]),t._v(" "),s("p",[t._v("常用的操作之一:用于基本数据类型与字符串之间的转换。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("基本数据类型")]),t._v(" "),s("th",[t._v("包装类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("byte")]),t._v(" "),s("td",[t._v("Byte")])]),t._v(" "),s("tr",[s("td",[t._v("short")]),t._v(" "),s("td",[t._v("Short")])]),t._v(" "),s("tr",[s("td",[t._v("int")]),t._v(" "),s("td",[t._v("Integer")])]),t._v(" "),s("tr",[s("td",[t._v("long")]),t._v(" "),s("td",[t._v("Long")])]),t._v(" "),s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("Float")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("Double")])]),t._v(" "),s("tr",[s("td",[t._v("char")]),t._v(" "),s("td",[t._v("Character")])]),t._v(" "),s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("Boolean")])])])]),t._v(" "),s("h2",{attrs:{id:"integer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer"}},[t._v("#")]),t._v(" Integer")]),t._v(" "),s("p",[s("strong",[t._v("概述：")]),t._v(" Integer:包装一个对象中的原始类型int的值")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public static Integer valueOf(int i)")]),t._v(" "),s("td",[t._v("返回表示指定的Int值的Integer实例")])]),t._v(" "),s("tr",[s("td",[t._v("public static Integer valueOf(String s)")]),t._v(" "),s("td",[t._v("String转Integer")])])])]),t._v(" "),s("h1",{attrs:{id:"九-集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九-集合"}},[t._v("#")]),t._v(" 九.集合")]),t._v(" "),s("p",[s("strong",[t._v("集合概述")])]),t._v(" "),s("p",[t._v("集合类的特点:提供一种存储空间可变的存储模型，存储的数据容量可以发生改变")]),t._v(" "),s("h2",{attrs:{id:"_9-1-集合体系结构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-集合体系结构图"}},[t._v("#")]),t._v(" 9.1 集合体系结构图")]),t._v(" "),s("p",[t._v("集合类的特点：提供一种存储空间可变的存储模型，存储的数据容量可以随时发生改变。")]),t._v(" "),s("div",{staticClass:"language-mermaid extra-class"},[s("pre",{pre:!0,attrs:{class:"language-mermaid"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("classDef")]),t._v(" fillStyle "),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#f96")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([集合])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Collection 单列]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Collection 单列]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[List 可重复]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tn1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[List 可重复]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[ArrayList]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle\n\t\tn1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[List 可重复]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[LinkedList]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle\n\tn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Collection 单列]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.3"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Set 不可重复]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tn1.3"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Set 不可重复]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.3.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[HashSet]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle\n\t\tn1.3"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Set 不可重复]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.3.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[TreeSet]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle\nnode"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([集合])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Map 双列]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tn2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[Map 双列]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[HashMap]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle\n")])])]),s("h2",{attrs:{id:"collection集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection集合"}},[t._v("#")]),t._v(" Collection集合")]),t._v(" "),s("p",[s("strong",[t._v("Collection集合概述")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("是单例集合的顶层接口，它表示一组对象，这些对象也称为Collection的元素。")])]),t._v(" "),s("li",[s("p",[t._v("JDK不提供此接口的任何直接实现，它提供更具体的子接口(如Set和List)实现")])])]),t._v(" "),s("p",[s("strong",[t._v("创建Collection集合对象")])]),t._v(" "),s("ul",[s("li",[t._v("多态的方式")]),t._v(" "),s("li",[t._v("具体实现类ArrayList")])]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("boolean add(E e)")]),t._v(" "),s("td",[t._v("添加元素")])]),t._v(" "),s("tr",[s("td",[t._v("boolean remove(Object o)")]),t._v(" "),s("td",[t._v("从集合中移除指定元素")])]),t._v(" "),s("tr",[s("td",[t._v("void clear()")]),t._v(" "),s("td",[t._v("清空集合中的元素")])]),t._v(" "),s("tr",[s("td",[t._v("boolean contains(Object o)")]),t._v(" "),s("td",[t._v("判断集合中是否存在指定的元素")])]),t._v(" "),s("tr",[s("td",[t._v("boolean isEmpty()")]),t._v(" "),s("td",[t._v("判断集合是否为空")])]),t._v(" "),s("tr",[s("td",[t._v("int size()")]),t._v(" "),s("td",[t._v("集合的长度，也就是集合中元素的个数")])])])]),t._v(" "),s("p",[s("strong",[t._v("Collection集合的遍历")])]),t._v(" "),s("p",[t._v("方式一：foreach")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我的歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈拉少"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("方式二：iterator迭代器")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我的歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈拉少"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" iterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"list集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list集合"}},[t._v("#")]),t._v(" List集合")]),t._v(" "),s("p",[s("strong",[t._v("概述：")])]),t._v(" "),s("ul",[s("li",[t._v("有序集合(也称为序列)，用户可以精确控制列表中每个元素的插入位置。用户可以通过整数索引访问元素并搜索列表中的元素。")]),t._v(" "),s("li",[t._v("与Set集合不同，列表通常允许重复的元素。")])]),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[t._v("有序：存储和取出元素的顺序一致")]),t._v(" "),s("li",[t._v("可重复：存储的元素可以重复")])]),t._v(" "),s("p",[s("strong",[t._v("List集合特有方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("void add(int index,E e)")]),t._v(" "),s("td",[t._v("在指定位置插入元素")])]),t._v(" "),s("tr",[s("td",[t._v("E remove(int index)")]),t._v(" "),s("td",[t._v("删除指定索引处元素")])]),t._v(" "),s("tr",[s("td",[t._v("E set(int index,E e)")]),t._v(" "),s("td",[t._v("修改指定索引处元素，返回被修改的元素")])]),t._v(" "),s("tr",[s("td",[t._v("E get(int index)")]),t._v(" "),s("td",[t._v("返回指定索引处的元素")])])])]),t._v(" "),s("h2",{attrs:{id:"arraylist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[t._v("#")]),t._v(" ArrayList")]),t._v(" "),s("p",[s("code",[t._v("ArrayList<E>")])]),t._v(" "),s("ul",[s("li",[t._v("可调整大小的数组实现")]),t._v(" "),s("li",[s("E",[t._v("是一种特殊的数据类型，泛型\n")])],1)]),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("p",[t._v("查询快，增删改慢。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public boolean remove(Object o)")]),t._v(" "),s("td",[t._v("删除指定的元素，返回删除是否成功")])]),t._v(" "),s("tr",[s("td",[t._v("public E remove(int index)")]),t._v(" "),s("td",[t._v("删除指定索引处的元素，返回被删除的元素")])]),t._v(" "),s("tr",[s("td",[t._v("public E set(int index,E e)")]),t._v(" "),s("td",[t._v("修改指定索引处的元素，返回被修改的元素")])]),t._v(" "),s("tr",[s("td",[t._v("public E get(int index)")]),t._v(" "),s("td",[t._v("返回指定索引处的元素")])]),t._v(" "),s("tr",[s("td",[t._v("public int size()")]),t._v(" "),s("td",[t._v("返回集合中元素的个数")])]),t._v(" "),s("tr",[s("td",[t._v("public boolean add(E e)")]),t._v(" "),s("td",[t._v("将指定元素追加到此集合的末尾")])]),t._v(" "),s("tr",[s("td",[t._v("public void add(int index,E e)public boolean add(E e)")]),t._v(" "),s("td",[t._v("在此集合中的指定位置插入指定的元素将指定元素追加到此集合的末尾")])])])]),t._v(" "),s("h2",{attrs:{id:"linkedlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("p",[t._v("LinkedList集合是基于List接口实现的，底层是链表。")]),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("p",[t._v("查询慢，增删改快。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public void addFitst(E e)")]),t._v(" "),s("td",[t._v("在该列表开头插入指定的元素")])]),t._v(" "),s("tr",[s("td",[t._v("public void addLast(E e)")]),t._v(" "),s("td",[t._v("将指定的元素追加到此表的末尾")])]),t._v(" "),s("tr",[s("td",[t._v("public E getFirst()")]),t._v(" "),s("td",[t._v("返回列表中的第一个元素")])]),t._v(" "),s("tr",[s("td",[t._v("public E getLast()")]),t._v(" "),s("td",[t._v("返回列表中的最后一个元素")])]),t._v(" "),s("tr",[s("td",[t._v("public E removeFirst()")]),t._v(" "),s("td",[t._v("从此列表删除第一个元素")])]),t._v(" "),s("tr",[s("td",[t._v("public E removeFirst()")]),t._v(" "),s("td",[t._v("从此列表删除最后一个元素")])])])]),t._v(" "),s("h2",{attrs:{id:"set集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set集合"}},[t._v("#")]),t._v(" Set集合")]),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[t._v("不允许元素重复")]),t._v(" "),s("li",[t._v("没有带索引的方法，不能使用普通for遍历")]),t._v(" "),s("li",[t._v("对集合的迭代顺序不能保证")])]),t._v(" "),s("h2",{attrs:{id:"hash值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash值"}},[t._v("#")]),t._v(" Hash值")]),t._v(" "),s("p",[t._v("**哈希值：**是JDK根据对象的"),s("code",[t._v("地址")]),t._v("或者"),s("code",[t._v("字符串")]),t._v("或者"),s("code",[t._v("数字")]),t._v("算出来的int类型的"),s("code",[t._v("数值")]),t._v("。")]),t._v(" "),s("p",[t._v("Object类中有一个方法可以获取"),s("code",[t._v("对象的哈希值")])]),t._v(" "),s("ul",[s("li",[t._v("public int hashCode();\t返回对象的哈希值")])]),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[t._v("同一个对象多次调用hashCode()方法返回的哈希值是相同的。")]),t._v(" "),s("li",[t._v("默认情况下，不同对象的哈希值是不同的。而重写hashCode()方法，可以实现让不同对象的哈希值相同。")])]),t._v(" "),s("p",[s("strong",[t._v("哈希表")])]),t._v(" "),s("ul",[s("li",[t._v("JDK8之前，底层采用"),s("code",[t._v("数组+链表")]),t._v("实现，可以说是一个元素为链表的数组。")]),t._v(" "),s("li",[t._v("JDK8之后，在长度较长的时候，底层实现了优化。")])]),t._v(" "),s("h2",{attrs:{id:"hashset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" HashSet")]),t._v(" "),s("p",[t._v("**概述：**该类实现Set接口，由哈希表支持。对集合迭代顺序不做保证；特别是，它不能保证在一段时间内保持不变。这个类允许null元素。")]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ul",[s("li",[t._v("底层数据结构是哈希表。")]),t._v(" "),s("li",[t._v("对集合的迭代顺序不作任何保证，也就是说不保证存储和取出的元素顺序一致。")]),t._v(" "),s("li",[t._v("没有带索引的方法，所以不能使用普通for循环遍历。")]),t._v(" "),s("li",[t._v("由于是Set集合，所以是不包含重复元素的集合。")])]),t._v(" "),s("h2",{attrs:{id:"linkedhashset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[t._v("#")]),t._v(" LinkedHashSet")]),t._v(" "),s("p",[t._v("**概述：**哈希表和链表实现的Set接口，具有可预测的迭代次序。")]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ul",[s("li",[t._v("哈希表和链表实现的Set接口，具有可预测的迭代次序。")]),t._v(" "),s("li",[t._v("由链表保证元素有序，也就是说元素的存储和取出顺序是一致的。")]),t._v(" "),s("li",[t._v("由哈希表保证元素唯一，也就是说没有重复的元素。")])]),t._v(" "),s("h2",{attrs:{id:"treeset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[t._v("#")]),t._v(" TreeSet")]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ul",[s("li",[t._v("元素有序，这里的顺序不是指存储和取出的顺序，而是按照一定的规则进行排序，具体排序方式取决于构造方法。")]),t._v(" "),s("li",[t._v("TreeSet()：根据其元素的自然排序进行排序。")]),t._v(" "),s("li",[t._v("TreeSet(Comparator comparator)：根据指定的比较器进行排序。")]),t._v(" "),s("li",[t._v("由于是Set集合，所以不包含重复元素的集合。")])]),t._v(" "),s("h2",{attrs:{id:"map集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map集合"}},[t._v("#")]),t._v(" Map集合")]),t._v(" "),s("p",[s("strong",[t._v("概述")])]),t._v(" "),s("ul",[s("li",[t._v("Interface Map<K,V>\tK:键的类型;\tV:值的类型")]),t._v(" "),s("li",[t._v("将键映射到值的对象；不能包含重复的键；每个键可以映射到最多一个值")])]),t._v(" "),s("p",[s("strong",[t._v("基本功能")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("V put(K k,V v)")]),t._v(" "),s("td",[t._v("添加元素")])]),t._v(" "),s("tr",[s("td",[t._v("V remove(K k)")]),t._v(" "),s("td",[t._v("根据K删除元素")])]),t._v(" "),s("tr",[s("td",[t._v("void clear()")]),t._v(" "),s("td",[t._v("移除所有元素")])]),t._v(" "),s("tr",[s("td",[t._v("boolean containsKey(K k)")]),t._v(" "),s("td",[t._v("判断集合是否包含指定的键")])]),t._v(" "),s("tr",[s("td",[t._v("boolean containsValue(V v)")]),t._v(" "),s("td",[t._v("判断集合是否包含指定的值")])]),t._v(" "),s("tr",[s("td",[t._v("boolean isEmpty()")]),t._v(" "),s("td",[t._v("判断集合是否为空")])]),t._v(" "),s("tr",[s("td",[t._v("int size()")]),t._v(" "),s("td",[t._v("获取集合的长度")])]),t._v(" "),s("tr",[s("td",[t._v("V get(K k)")]),t._v(" "),s("td",[t._v("根据键获取值")])]),t._v(" "),s("tr",[s("td",[t._v("Set"),s("K",[t._v(" keySet()")])],1),t._v(" "),s("td",[t._v("获取所有键的集合")])]),t._v(" "),s("tr",[s("td",[t._v("Collection"),s("V",[t._v(" values()")])],1),t._v(" "),s("td",[t._v("获取所有值的集合")])]),t._v(" "),s("tr",[s("td",[t._v("Set<Map.Entry<K,V>>  entrySet()")]),t._v(" "),s("td",[t._v("获取所有键值对对象的集合")])])])]),t._v(" "),s("h2",{attrs:{id:"collections"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collections"}},[t._v("#")]),t._v(" Collections")]),t._v(" "),s("p",[t._v("**概述：**Collections是针对集合操作的工具类。")]),t._v(" "),s("p",[s("strong",[t._v("常用方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("static <T extends Comparable<? super  T>>void sort(List"),s("T",[t._v(" list)")])],1),t._v(" "),s("td",[t._v("将指定的列表按升序排序")])]),t._v(" "),s("tr",[s("td",[t._v("static void reverse(List<?> list)")]),t._v(" "),s("td",[t._v("反转指定列表中元素的顺序")])]),t._v(" "),s("tr",[s("td",[t._v("static void shuffle(List<?> list)")]),t._v(" "),s("td",[t._v("使用默认的随机源随机排列指定的列表")])])])]),t._v(" "),s("h1",{attrs:{id:"十-泛型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十-泛型"}},[t._v("#")]),t._v(" 十.泛型")]),t._v(" "),s("p",[t._v("**泛型：**是JDK5中引入的特性，它提供了编译时类型安全检测机制，该机制允许在编译时检测到非法的类型它的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。")]),t._v(" "),s("p",[t._v("一提到参数，最熟悉的就是定义方法时有形参，然后调用此方法传递实参，顾名思义，就是将类型由原来的具体的类型参数化，然后在使用/调用时传入具体的类型。")]),t._v(" "),s("p",[t._v("这种参数类型可以用在类、方法和接口中，分别被称为泛型类、泛型方法、泛型接口")]),t._v(" "),s("p",[s("strong",[t._v("泛型定义格式")])]),t._v(" "),s("ul",[s("li",[t._v("<类型>：指定一种类型的格式。这里的类型可以看成是形参。")]),t._v(" "),s("li",[t._v("<类型1，类型2...>：指定多种类型的格式，多种类型之间用逗号分隔。这里的类型可以看成是形参。")]),t._v(" "),s("li",[t._v("将来具体调用的时候给定实参，并且实参的类型只能是引用数据类型。")])]),t._v(" "),s("h2",{attrs:{id:"泛型类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型类"}},[t._v("#")]),t._v(" "),s("strong",[t._v("泛型类")])]),t._v(" "),s("ul",[s("li",[t._v("格式：修饰符 class 类名<类型>{}")]),t._v(" "),s("li",[t._v("范例：public class Generic"),s("T",[t._v("{}\n"),s("ul",[s("li",[t._v("此处的T可以是任意标识，常见的如T,E,K,V等形式的参数常用于表示泛型。")])])])],1)]),t._v(" "),s("h2",{attrs:{id:"泛型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型方法"}},[t._v("#")]),t._v(" "),s("strong",[t._v("泛型方法")])]),t._v(" "),s("ul",[s("li",[t._v("格式：修饰符<类型>  返回值类型  方法名(类型 变量名){}")]),t._v(" "),s("li",[t._v("范例1：public"),s("T",[t._v(" void show(T t){}")])],1),t._v(" "),s("li",[t._v("范例2：public  static"),s("T",[t._v(" void show(T t){}")])],1)]),t._v(" "),s("h2",{attrs:{id:"泛型接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型接口"}},[t._v("#")]),t._v(" "),s("strong",[t._v("泛型接口")])]),t._v(" "),s("ul",[s("li",[t._v("格式：修饰符 interface 接口名<类型>{}")]),t._v(" "),s("li",[t._v("范例：public interface Test"),s("T",[t._v("{}")])],1)]),t._v(" "),s("h2",{attrs:{id:"类型通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型通配符"}},[t._v("#")]),t._v(" "),s("strong",[t._v("类型通配符")])]),t._v(" "),s("p",[t._v("为了表示各种泛型list的父亲，可以使用类型通配符")]),t._v(" "),s("ul",[s("li",[t._v("类型通配符：<?>")]),t._v(" "),s("li",[t._v("list<?>：表示元素类型未知的list，它的元素可以匹配"),s("code",[t._v("任何的类型")]),t._v("。")]),t._v(" "),s("li",[t._v("这种带通配符的list仅表示它是各种泛型list的父类，并不能把元素添加到其中。")])]),t._v(" "),s("p",[t._v("如果说我们不希望List<?>是任何泛型L ist的父类，只希望它代表某一类泛型List的父类，可以使用类型通配符的上限。")]),t._v(" "),s("ul",[s("li",[t._v("类型通配符上限："),s("code",[t._v("<? extends 类型>")])]),t._v(" "),s("li",[t._v("List<? extends Number>：它表示的类型是Number或者其他子类")])]),t._v(" "),s("p",[t._v("除了可以指定类型通配符的上限，我们也可以指定类型通配符的下限")]),t._v(" "),s("ul",[s("li",[t._v("类型通配符下限：<? super 类型>")]),t._v(" "),s("li",[t._v("LIst<? super Number>：它表示的类型是Number或者其父类。")])]),t._v(" "),s("h2",{attrs:{id:"可变参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可变参数"}},[t._v("#")]),t._v(" 可变参数")]),t._v(" "),s("p",[t._v("**概述：**可变参数又称参数个数可变，用作方法的形参出现，那么方法参数个数就是可变的了。")]),t._v(" "),s("ul",[s("li",[t._v("格式：修饰符  返回值类型  方法名(数据类型 ...变量名)")]),t._v(" "),s("li",[t._v("范例：public int sum(int...a)")]),t._v(" "),s("li",[t._v("范例：public int sum(int a,int...b)\n"),s("ul",[s("li",[t._v("形参里面的内容就是一个数组")])])])]),t._v(" "),s("h1",{attrs:{id:"十一-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一-file"}},[t._v("#")]),t._v(" 十一.File")]),t._v(" "),s("p",[t._v("**概述：**File是文件和目录路径名的抽象表示。")]),t._v(" "),s("ul",[s("li",[t._v("文件和目录是可以通过File封装成对象的")]),t._v(" "),s("li",[t._v("对于File而言，其封装的并不是一个真正存在的文件，仅仅是一个路径名而已。它可以是存在的，也可以是不存在的。将来是要通过具体的操作把这个路径的内容转换为具体存在的。")])]),t._v(" "),s("h2",{attrs:{id:"构造方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("构造方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("File(File parent, String child)")]),t._v(" "),s("td",[t._v("从父抽象路径名和子路径名字符串创建新的 File实例。")])]),t._v(" "),s("tr",[s("td",[t._v("File(String pathname)")]),t._v(" "),s("td",[t._v("通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例。")])]),t._v(" "),s("tr",[s("td",[t._v("File(String parent, String child)")]),t._v(" "),s("td",[t._v("从父路径名字符串和子路径名字符串创建新的 File实例。")])]),t._v(" "),s("tr",[s("td",[t._v("File(URI uri)")]),t._v(" "),s("td",[t._v("通过将给定的 file: URI转换为抽象路径名来创建新的 File实例。")])])])]),t._v(" "),s("h2",{attrs:{id:"file类的创建功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file类的创建功能"}},[t._v("#")]),t._v(" "),s("strong",[t._v("File类的创建功能")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("boolean createNewFile()")]),t._v(" "),s("td",[t._v("当且仅当具有此名称的文件尚不存在时以创建由此抽象路径名命名的新空文件。")])]),t._v(" "),s("tr",[s("td",[t._v("boolean mkdir()")]),t._v(" "),s("td",[t._v("创建此抽象路径名指定的目录。")])]),t._v(" "),s("tr",[s("td",[t._v("boolean mkdirs()")]),t._v(" "),s("td",[t._v("创建此抽象路径名指定的目录，包括任何必需但不存在的父目录。")])])])]),t._v(" "),s("h2",{attrs:{id:"file类判断和获取功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file类判断和获取功能"}},[t._v("#")]),t._v(" "),s("strong",[t._v("File类判断和获取功能")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public boolean isDirectory()")]),t._v(" "),s("td",[t._v("测试此抽象路径名表示的File是否为目录")])]),t._v(" "),s("tr",[s("td",[t._v("public boolean isFile()")]),t._v(" "),s("td",[t._v("测试此抽象路径名表示的File是否为文件")])]),t._v(" "),s("tr",[s("td",[t._v("public boolean exists()")]),t._v(" "),s("td",[t._v("测试此抽象路径名表示的File是否存在")])]),t._v(" "),s("tr",[s("td",[t._v("public String getAbsolutePath()")]),t._v(" "),s("td",[t._v("返回此抽象路径名的绝对路径名字符串")])]),t._v(" "),s("tr",[s("td",[t._v("public String getPath()")]),t._v(" "),s("td",[t._v("将此抽象路径名转换为路径名字符串")])]),t._v(" "),s("tr",[s("td",[t._v("public String getName()")]),t._v(" "),s("td",[t._v("返回由此抽象路径名表示的文件或目录的名称")])]),t._v(" "),s("tr",[s("td",[t._v("public String[] list()")]),t._v(" "),s("td",[t._v("返回此抽象路径名表示的目录中的文件和目录的名称字符串数组")])]),t._v(" "),s("tr",[s("td",[t._v("public File[] listFiles()")]),t._v(" "),s("td",[t._v("返回此抽象路径名表示的目录中的文件和目录的File对象数组")])])])]),t._v(" "),s("h2",{attrs:{id:"file类删除功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file类删除功能"}},[t._v("#")]),t._v(" "),s("strong",[t._v("File类删除功能")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public boolean delete()")]),t._v(" "),s("td",[t._v("删除由此抽象路径表示的文件或目录")])])])]),t._v(" "),s("p",[t._v("当删除的是目录时，目录非空时无法删除。")]),t._v(" "),s("h1",{attrs:{id:"十二-io流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十二-io流"}},[t._v("#")]),t._v(" 十二.IO流")]),t._v(" "),s("p",[s("strong",[t._v("概述：")])]),t._v(" "),s("ul",[s("li",[t._v("IO:输入/输出(Input/Output)")]),t._v(" "),s("li",[t._v("流：是一种抽象概念，是对数据传输的总称。也就是说数据在设备间的传输称为流，流的本质是数据传输。")]),t._v(" "),s("li",[t._v("IO流就是用来处理设备间数据传输问题的\n"),s("ul",[s("li",[t._v("常见的应用、文件复制、文件上传、文件下载。")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220714193301639.png",alt:"image-20220714193301639"}})]),t._v(" "),s("p",[s("strong",[t._v("IO流分类")])]),t._v(" "),s("ul",[s("li",[t._v("按照数据的流向\n"),s("ul",[s("li",[t._v("输入流：读数据")]),t._v(" "),s("li",[t._v("输出流：写数据")])])]),t._v(" "),s("li",[t._v("按照数据类型来分\n"),s("ul",[s("li",[t._v("字节流\n"),s("ul",[s("li",[t._v("字节输入流、字节输出流")])])]),t._v(" "),s("li",[t._v("字符流\n"),s("ul",[s("li",[t._v("字符输入流、字符输出流")])])])])])]),t._v(" "),s("p",[t._v("一般来说，我们说IO流的分类是按照"),s("code",[t._v("数据类型")]),t._v("来分的。")]),t._v(" "),s("p",[s("strong",[t._v("字节流、字符流应用场景")])]),t._v(" "),s("ul",[s("li",[t._v("像文本文档这种类型的文件我们用字符流，内容具体")]),t._v(" "),s("li",[t._v("像图片这种类型的文件我们用字节流，内容抽象")]),t._v(" "),s("li",[t._v("如果数据通过Window自带的记事本软件打开，我们还可以读懂里面的内容，就使用字符流,否则使用字节流。如果你不知道该使用哪种类型的流，就使用字节流")])]),t._v(" "),s("h2",{attrs:{id:"字节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节流"}},[t._v("#")]),t._v(" 字节流")]),t._v(" "),s("p",[s("strong",[t._v("字节流写数据")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Constructor")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Fileoutputstream(File file)")]),t._v(" "),s("td",[t._v("创建文件输出流以写入由指定的File对象表示的文件。")])]),t._v(" "),s("tr",[s("td",[t._v("Fileoutputstream (FileDescriptor fdobj)")]),t._v(" "),s("td",[t._v("创建文件输出流以写入指定的文件描述符，表示与文件系统中实际文件的现有连接。")])]),t._v(" "),s("tr",[s("td",[t._v("Fileoutputstream (File file, boolean append)")]),t._v(" "),s("td",[t._v("创建文件输出流以写入由指定的Eile对象表示的文件。")])]),t._v(" "),s("tr",[s("td",[t._v("FileoutputStream ( String name)")]),t._v(" "),s("td",[t._v("创建文件输出流以指定的名称写入文件。")])]),t._v(" "),s("tr",[s("td",[t._v("FileOutputStream (String name, boolearappend)")]),t._v(" "),s("td",[t._v("创建文件输出流以指定的名称写入文件。")])])])]),t._v(" "),s("p",[t._v("字节流抽象基类")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("InputStream:这个抽象类是表示字节输入流的所有类的超类")])]),t._v(" "),s("li",[s("p",[t._v("OutputStream:这个抽象类是表示字节输出流的所有类的超类")])]),t._v(" "),s("li",[s("p",[t._v("子类名特点:子类名称都是以其父类名作为子类名的后缀")])])]),t._v(" "),s("p",[t._v("FileOutputStream:文件输出流用于将数据写入File。")]),t._v(" "),s("ul",[s("li",[t._v("FileOutputStream(String name):创建文件输出流以指定的名称写入文件")])]),t._v(" "),s("p",[t._v("使用字节输出流写数据的步骤:")]),t._v(" "),s("ul",[s("li",[t._v("创建字节输出流对象(调用系统功能创建了文件，创建字节输出流对象，让字节输出流对象指向文件)")]),t._v(" "),s("li",[t._v("调用字节输出流对象的写数据方法")]),t._v(" "),s("li",[t._v("释放资源：close()")])]),t._v(" "),s("p",[s("strong",[t._v("字节流写数据的三种方式")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("void write(int b)")]),t._v(" "),s("td",[t._v("将指定的字节写入此文件输出流一次写一个字节数据")])]),t._v(" "),s("tr",[s("td",[t._v("void write(byte[] b)")]),t._v(" "),s("td",[t._v("将b.length字节从指定的字节数组写入此文件输出流一次写一个字节数组数据")])]),t._v(" "),s("tr",[s("td",[t._v("void write(byte[] b,int off,int len)")]),t._v(" "),s("td",[t._v("将len字节从指定的字节数组开始，从偏移量off开始写入此文件输出流一次写一个字节数组的部分数据")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈拉少,zbc我的歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("写入换行")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// windows: \\r\\n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// linux: \\n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mac: \\r")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("追加写入")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// append: true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n")])])]),s("p",[s("strong",[t._v("字节流读数据（一次读一个字节数据）")])]),t._v(" "),s("p",[t._v("FilelnputStream:从文件系统中的文件获取输入字节")]),t._v(" "),s("ul",[s("li",[t._v("FileInputStream(String name):通过打开与实际文件的连接来创建一个FilelnputStream，该文件由文件系统中的路径名name命名")])]),t._v(" "),s("p",[t._v("使用字节输入流读数据的步骤:")]),t._v(" "),s("ol",[s("li",[t._v("创建字节输入流对象")]),t._v(" "),s("li",[t._v("调用字节输入流对象的读数据方法")]),t._v(" "),s("li",[t._v("释放资源")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("字节流复制文件")])]),t._v(" "),s("ul",[s("li",[t._v("复制文本文件，其实就把文本文件的内容从一个文件中读取出来("),s("code",[t._v("数据源")]),t._v(")，然后写入到另一个文件中("),s("code",[t._v("目的地")]),t._v(")")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" imgBytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bizhi.jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zz.jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imgBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imgBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("代码意义：创建一个缓冲区imgBytes，循环将读出来的数据放入缓冲区内，再将缓冲区的数据写入到对应文件内。此方法适用任何文件。")]),t._v(" "),s("p",[s("strong",[t._v("字节流读数据（一次读一个字节数组数据）")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nfis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"字节缓冲流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节缓冲流"}},[t._v("#")]),t._v(" 字节缓冲流")]),t._v(" "),s("p",[s("strong",[t._v("字节缓冲流")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("BufferOutputStream:该类实现缓冲输出流。通过设置这样的输出流，应用程序可以向底层输出流写入字节，而不必为写入的每个字节导致底层系统的调用。")])]),t._v(" "),s("li",[s("p",[t._v("BufferedInputStream:创建BufferedInputstream将创建一个内部缓冲区数组。当从流中读取或跳过字节时，内部缓冲区将根据需要从所包含的输入流中重新填充，一次很多字节。")])])]),t._v(" "),s("p",[s("strong",[t._v("构造方法")])]),t._v(" "),s("ul",[s("li",[t._v("字节缓冲输出流:BufferedOutputStream(OutputStream out)")]),t._v(" "),s("li",[t._v("字节缓冲输入流:BufferedInputStream(InputStream in)")])]),t._v(" "),s("p",[t._v("为什么构造方法需要的是字节流，而不是具体的文件或者路径呢?")]),t._v(" "),s("p",[t._v("字节缓冲流仅仅提供缓冲区，而真正的读写数据还得依靠基本的字节流对象进行操作。")]),t._v(" "),s("p",[s("strong",[t._v("写数据")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" fileOutStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedOutputStream")]),t._v(" bos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileOutStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("读数据")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedInputStream")]),t._v(" bis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        一次读取一个字节")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        int by;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        while ((by = bis.read()) != -1) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.print((char) by);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        }")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        一次读取一个字节数组数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nbis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("拓展")])]),t._v(" "),s("p",[t._v("字节流如何处理中文乱码？")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gbk"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在String里指定编码格式即可")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("A：在String里指定编码格式即可")]),t._v(" "),s("h2",{attrs:{id:"字符流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符流"}},[t._v("#")]),t._v(" 字符流")]),t._v(" "),s("ul",[s("li",[t._v("字符流 = 字节流 + 编码表")])]),t._v(" "),s("p",[s("strong",[t._v("编码表")])]),t._v(" "),s("p",[t._v("基础知识")]),t._v(" "),s("ul",[s("li",[t._v("计算机中储存的信息都是用二进制数表示的;我们在屏幕上看到的英文、汉字等字符是二进制数转换之后的结果。")]),t._v(" "),s("li",[t._v("按照某种规则，将字符存储到计算机中，称为编码。反之，将存储在计算机中的二进制数按照某种规则解析显示出来，称为解码。这里强调一下：按照A编码存储，必须按照A编码解析，这样才能显示正确的文本符号。否则就会导致乱码现象。")])]),t._v(" "),s("p",[t._v("字符编码:就是一套自然语言的字符与二进制数之间的对应规则(A,65)")]),t._v(" "),s("p",[t._v("字符集")]),t._v(" "),s("ul",[s("li",[t._v("是一个系统支持的所有字符的集合，包括各国家文字、标点符号、图形符号、数字等。")]),t._v(" "),s("li",[t._v("计算机要准确的存储和识别各种字符集符号，就需要进行字符编码，一套字符集必然至少有一套字符编码。常见字符集有ASCII字符集、GBxxx学符集、Unicode字符集等。")])]),t._v(" "),s("p",[s("strong",[t._v("编码")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("byte[] getBytes():使用平台的默认字符集将该String编码为一系列字节，将结果存储到新的字节数组中")])]),t._v(" "),s("li",[s("p",[t._v("byte[] getBytes(String charsetName):使用指定的字符集将该String编码为一系列字节，将结果存储到新的字节数组中。")])])]),t._v(" "),s("p",[s("strong",[t._v("解码")])]),t._v(" "),s("ul",[s("li",[t._v("String(byte[] bytes):通过使用平台的默认字符集解码指定的字节数组来构造新的String。")]),t._v(" "),s("li",[t._v("String(byte[] bytes, String charsetName):通过指定的字符集解码指定的字节数组来构造新的String。")])]),t._v(" "),s("p",[s("strong",[t._v("字符流抽象基类")])]),t._v(" "),s("ul",[s("li",[t._v("Reader：字符输入流的抽象类")]),t._v(" "),s("li",[t._v("Writer：字符输出流的抽象类")])]),t._v(" "),s("p",[s("strong",[t._v("字符流中编码解码问题相关的两个类")])]),t._v(" "),s("ul",[s("li",[t._v("InputStreamReader")]),t._v(" "),s("li",[t._v("OutputStreamWriter")])]),t._v(" "),s("p",[s("strong",[t._v("字符流写数据")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStreamWriter")]),t._v(" osw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStreamWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nosw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n\\t我的歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nosw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("字符流读数据")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fileInputStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Reader")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileInputStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" chars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfileInputStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("文件字符流")])]),t._v(" "),s("ul",[s("li",[t._v("FileReader (extends InputStreamReader)")]),t._v(" "),s("li",[t._v("FileWriter (extends OutputStreamWriter)")])]),t._v(" "),s("p",[t._v("转换流的名字比较长，而我们常见的操作都是按照本地默认编码实现的，所以，为了简化书写，转换流提供了对应的子类。")]),t._v(" "),s("ul",[s("li",[t._v("FileReader：用于读取字符文件的便捷类\n"),s("ul",[s("li",[t._v("FileReader(String fileName)")])])]),t._v(" "),s("li",[t._v("FileWriter：用于写入字符文件的便捷类\n"),s("ul",[s("li",[t._v("FileWriter(String fileName)")])])]),t._v(" "),s("li",[t._v("数据源和目的地的分析\n"),s("ul",[s("li",[t._v("数据源: myCharStreaml|ConversionStreamDemo.java---读数据---Reader --- nputStreamReader---FileReader目的地: myCharStreaml\\Copy.java ---写数据---Writer --- OutputStreamWriter ---FileWriter")])])])]),t._v(" "),s("p",[s("strong",[t._v("字符缓冲流")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("BufferedWriter：将文本写入字符输出流，缓冲字符，以提供单个字符，数组和字符串的高效写入，可以指定缓冲区大小，或者可以接受默认大小。默认值足够大，可用于大多数用途")])]),t._v(" "),s("li",[s("p",[t._v("BufferedReader：从字符输入流读取文本，缓冲字符，以提供字符，数组和行的高效读取，可以指定缓冲区大小，或者可以使用默认大小。默认值足够大，可用于大多数用途")])])]),t._v(" "),s("p",[s("strong",[t._v("字符缓冲流特有功能")])]),t._v(" "),s("p",[t._v("BufferedWriter：")]),t._v(" "),s("ul",[s("li",[t._v("void newLine():写一行行分隔符，行分隔符字符串由系统属性定义")])]),t._v(" "),s("p",[t._v("BufferedReader：")]),t._v(" "),s("ul",[s("li",[t._v("public String readLine():读一行文字。结果包含行的内容的字符串，不包括任何行终止字符，如果流的结尾已经到达，则为null")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("node([集合])--\x3en1[Collection 单列];\n\tn1[Collection 单列]--\x3en1.2[List 可重复];\n\t\tn1.2[List 可重复]--\x3en1.2.1[ArrayList]:::fillStyle\n\t\tn1.2[List 可重复]--\x3en1.2.2[LinkedList]:::fillStyle\n\tn1[Collection 单列]--\x3en1.3[Set 不可重复];\n\t\tn1.3[Set 不可重复]--\x3en1.3.1[HashSet]:::fillStyle\n\t\tn1.3[Set 不可重复]--\x3en1.3.2[TreeSet]:::fillStyle\nnode([集合])--\x3en2[Map 双列];\n\tn2[Map 双列]--\x3e2.1[HashMap]:::fillStyle\n")])])]),s("p",[s("strong",[t._v("IO流小结")])]),t._v(" "),s("ul",[s("li",[t._v("字节流")])]),t._v(" "),s("div",{staticClass:"language-mermaid extra-class"},[s("pre",{pre:!0,attrs:{class:"language-mermaid"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("classDef")]),t._v(" fillStyle "),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#f96")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字节流])")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字节流])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字节输入流 InputStream]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字节输入流 InputStream]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileInputStream]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileInputStream]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[BufferedInputStream 字节缓冲输入流]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字节流])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字节输出流 OutputStream]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字节输出流 OutputStream]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileOutputStream]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileOutputStream]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[BufferedOutputStream 字节缓冲输出流]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("字符流")])]),t._v(" "),s("div",{staticClass:"language-mermaid extra-class"},[s("pre",{pre:!0,attrs:{class:"language-mermaid"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("classDef")]),t._v(" fillStyle "),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#f96")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字符流])")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字符流])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输出流 Writer]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("([字符流])")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输入流 Reader]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nn1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输出流 Writer]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[OutputStreamReader]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输出流 Writer]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符缓冲输出流 BufferedWriter]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nn1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输入流 Reader]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[OutputStreamWriter]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符输入流 Reader]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.2.2"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[字符缓冲输入流 BufferedReader]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nn1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[OutputStreamReader]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.1.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileWriter]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[InputStreamReader]")]),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("n1.1.2.1"),s("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[FileReader]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":::")]),t._v("fillStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"读写异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读写异常处理"}},[t._v("#")]),t._v(" 读写异常处理")]),t._v(" "),s("ul",[s("li",[t._v("JDK7改进的方案")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io2.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" chars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("JDK9改进的方案")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io2.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" chars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("jdk9的改进方案没有jdk7那么优雅，推荐使用jdk7的改进方案。")])]),t._v(" "),s("h2",{attrs:{id:"标准io流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准io流"}},[t._v("#")]),t._v(" 标准IO流")]),t._v(" "),s("p",[t._v("System类中有两个静态的成员变量")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("public static final lnputStream in:标准输入流。通常该流对应于键盘输入或由主机环境或用户指定的另一个输入源。")])]),t._v(" "),s("li",[s("p",[t._v("public static final PrintStream out:标准输出流。通常该流对应于显示输出或由主机环境或用户指定的另一个输出目标。")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedReader")]),t._v(" br "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" br"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"打印流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打印流"}},[t._v("#")]),t._v(" 打印流")]),t._v(" "),s("p",[t._v("打印流分类")]),t._v(" "),s("ul",[s("li",[t._v("字节打印流：PrintStrem")]),t._v(" "),s("li",[t._v("字符打印流：PrintWriter")])]),t._v(" "),s("p",[t._v("打印流的特点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("只负责输出数据，不负责读取数据。")])]),t._v(" "),s("li",[s("p",[t._v("有自己的特有方法")])])]),t._v(" "),s("p",[t._v("字节打印流")]),t._v(" "),s("ul",[s("li",[t._v("Printstream(String fileName):使用指定的文件名创建新的打印流")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),t._v(" printStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io2.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprintStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈拉少"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprintStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("字符打印流")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWriter")]),t._v(" pw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"非常的哈拉少"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"对象序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象序列化"}},[t._v("#")]),t._v(" 对象序列化")]),t._v(" "),s("p",[t._v("对象序列化：就是将对象保存到磁盘中，或者在网络中传输对象。")]),t._v(" "),s("p",[t._v("这种机制就是使用一个字节序列表示一个对象，该字节序列包含：对象的类型、对象的数据和对象中存储的属性等信息字节序列写到文件之后，相当于文件中持久保存了一个对象的信息。")]),t._v(" "),s("p",[t._v("反之，该字节序列还可以从文件中读取回来，重构对象，对它进行反序列化。")]),t._v(" "),s("p",[t._v("要实现序列化和反序列化就要使用对象序列化流和对象反序列化流：")]),t._v(" "),s("ul",[s("li",[t._v("对象序列化流：ObjectOutputStream")]),t._v(" "),s("li",[t._v("对象反序列化流：ObjectInputStream")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h2",{attrs:{id:"properties作为map集合使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties作为map集合使用"}},[t._v("#")]),t._v(" Properties作为Map集合使用")]),t._v(" "),s("p",[t._v("Properties概述：")]),t._v(" "),s("ul",[s("li",[t._v("是一个Map体系的集合类")]),t._v(" "),s("li",[t._v("Properties可以保存到流中或从流中加载")])]),t._v(" "),s("p",[t._v("练习: Properties作为Map集合的使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" prop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Properties集合特有的方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Object setProperty(String key,String value)")]),t._v(" "),s("td",[t._v("设置集合的键和值，都是String类型，底层调用HashTable方法put")])]),t._v(" "),s("tr",[s("td",[t._v("String getProperty(String key)")]),t._v(" "),s("td",[t._v("使用此属性列表中指定的键搜索属性")])]),t._v(" "),s("tr",[s("td",[t._v("Set"),s("String",[t._v(" stringPropertyNames()")])],1),t._v(" "),s("td",[t._v("从该属性列表中返回一个不可修改的的键集，其中键对应的值都是字符串")])])])]),t._v(" "),s("p",[s("strong",[t._v("Properties和IO流结合的方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("void load(InputStream inStream)")]),t._v(" "),s("td",[t._v("从输入字节流读取属性列表(键和元素对)")])]),t._v(" "),s("tr",[s("td",[t._v("void load(Reader reader)")]),t._v(" "),s("td",[t._v("从输入字符流读取属性列表(键和元素对)")])]),t._v(" "),s("tr",[s("td",[t._v("void store(OutputStream out,String comments)")]),t._v(" "),s("td",[t._v("将此属性列表(键和元素对)写入此Properties表中，以适合于使用load(InputStream)方法的格式写入输出字节流，comments是描述信息。")])]),t._v(" "),s("tr",[s("td",[t._v("void store(Writer writer,String comments)")]),t._v(" "),s("td",[t._v("将此属性列表(键和元素对)写入此Properties表中，以适合使用load(Reader)方法的格式写入输出字符流，comments是描述信息。")])])])]),t._v(" "),s("h1",{attrs:{id:"十三-网络编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十三-网络编程"}},[t._v("#")]),t._v(" 十三.网络编程")]),t._v(" "),s("h2",{attrs:{id:"网络编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络编程"}},[t._v("#")]),t._v(" "),s("strong",[t._v("网络编程")])]),t._v(" "),s("ul",[s("li",[t._v("在网络通信协议下，实现网络互连的不同计算机上运行的程序间可以进行数据交换")])]),t._v(" "),s("p",[t._v("Http协议原理Http基本概念")]),t._v(" "),s("ul",[s("li",[t._v("基于HTTP传输协议（超文本传输协议）客户端与服务器端之间数据传输规则。")])]),t._v(" "),s("h2",{attrs:{id:"http特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http特点"}},[t._v("#")]),t._v(" HTTP特点:")]),t._v(" "),s("ol",[s("li",[t._v("底层基于TCP协议实现,面向连接方式安全")]),t._v(" "),s("li",[t._v("基于请求(request)与响应(response)模型")]),t._v(" "),s("li",[t._v("Http协议是无状态协议，对于事务处理是没有任何记忆功能")]),t._v(" "),s("li",[t._v("Http协议多次请求无法共享，在javaweb开发中我们可以通过cookie、session解决该问题")]),t._v(" "),s("li",[t._v("http协议数据传输过程中属于同步的过程;如果客户端发送请求达到服务器端，服务器端已经不响应可能会导致客户端会一直阻塞等待对于用户体验是不好的所以客户端发送请求达到服务器时会设置超时时间例如5s。")])]),t._v(" "),s("h2",{attrs:{id:"网络编程三要素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络编程三要素"}},[t._v("#")]),t._v(" "),s("strong",[t._v("网络编程三要素")])]),t._v(" "),s("p",[s("strong",[t._v("IP地址")])]),t._v(" "),s("ul",[s("li",[t._v("要想让网络中的计算机能够互相通信，必须为每台计算机指定一个标识号，通过这个标识号来指定要接收数据的计算机和识别发送的计算机，而IP地址就是这个标识号。也就是设备的标识。")])]),t._v(" "),s("p",[s("strong",[t._v("端口")])]),t._v(" "),s("ul",[s("li",[t._v("网络的通信，本质上是两个应用程序的通信。每台计算机都有很多的应用程序，那么在网络通信时如何区分这些应用程序呢?如果说IP地址可以唯一标识网络中的设备，那么端口号就可以唯一标识设备中的应用程序了。也就是应用程序的标识。\n"),s("ul",[s("li",[t._v("端口：设备上应用程序的唯一标识。")]),t._v(" "),s("li",[t._v("端口号：用两个字节表示的整数，它的取值范围是0~65535。其中，O~1023之间的端口号用于一些知名的网络服务和应用，普通的应用程序需要使用1024以上的端口号。如果端口号被另外一个服务或应用所占用会导致当前程序启动失败。")])])])]),t._v(" "),s("p",[s("strong",[t._v("协议")])]),t._v(" "),s("ul",[s("li",[t._v("通过计算机网络可以使多台计算机实现连接，位于同一个网络中的计算机在进行连接和通信时需要遵守一定的规则，这就好比在道路中行驶的汽车一定要遵守交通规则一样。在计算机网络中，这些连接和通被称为网络通信协议，它对数据的传输格式、传输速率、传输步骤等做了统一规定，通信双方必须同时遵守才能完成数据交换。常见的协议有UDP协议和TCP协议。")]),t._v(" "),s("li",[s("strong",[t._v("UDP协议")]),t._v(" "),s("ul",[s("li",[t._v("用户数据报协议(User Datagram Protocol)")]),t._v(" "),s("li",[t._v("UDP是无连接通信协议，即在数据传输时，数据的发送端和接收端不建立逻辑链接。简单来说，当一台算机向另外一台计算机发送数据时，发送端不会确认接收端是否存在，就会发出数据，同样接收端在收到数据时，也不会向发送端反馈是否收到数据。")]),t._v(" "),s("li",[t._v("由于使用UDP协议消耗资源小，通信效率高，所以通常都会用于音频、视频和普通数据的传输。")]),t._v(" "),s("li",[t._v("例如视频会议通常采用UDP协议，因为这种情况即使偶尔丢失一两个数据包，也不会对接收结果产生太大影响。但是在使用UDP协议传送数据时，由于UDP的面向无连接性，不能保证数据的完整性，因此在传输重要数据时不建议使用UDP协议。")])])]),t._v(" "),s("li",[s("strong",[t._v("TCP协议")]),t._v(" "),s("ul",[s("li",[t._v("传输控制协议(Transmission Control Protocol)。")]),t._v(" "),s("li",[t._v("TCP协议是面向连接的通信协议，即传输数据之前，在发送端和接收端建立逻辑连接，然后再传输数据,它提供了两台计算机之间可靠无差错的数据传输。在TCP连接中必须要明确客户端与服务器端，由客户端向服务端发出连接请求，每次连接的创建都需要经过“三次握手”。")]),t._v(" "),s("li",[t._v("三次握手：TCP协议中，在发送数据的准备阶段，客户端与服务器之间的三次交互，以保证连接的可靠。\n"),s("ul",[s("li",[t._v("第一次握手，客户端向服务器端发出连接请求，等待服务器确认。")]),t._v(" "),s("li",[t._v("第二次握手，服务器端向客户端回送一个响应，通知客户端收到了连接请求。")]),t._v(" "),s("li",[t._v("第三次握手，客户端再次向服务器端发送确认信息，确认连接。")])])]),t._v(" "),s("li",[t._v("完成三次握手，连接建立后，客户端和服务器就可以开始进行数据传输了。由于这种面向连接的特性，TCP协议可以保证传输数据的安全，所以应用十分广泛。例如上传文件、下载文件、浏览网页等。")])])])]),t._v(" "),s("h2",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" "),s("strong",[t._v("常用命令")])]),t._v(" "),s("ul",[s("li",[t._v("ipconfig：查看本机IP地址。")]),t._v(" "),s("li",[t._v("ping IP地址：检查网络是否连通。")])]),t._v(" "),s("p",[t._v("特殊lP地址：127.0.0.1:是回送地址，可以代表本机地址，一般用来测试使用")]),t._v(" "),s("h2",{attrs:{id:"inetaddress的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inetaddress的使用"}},[t._v("#")]),t._v(" "),s("strong",[t._v("InetAddress的使用")])]),t._v(" "),s("p",[t._v("为了方便我们对IP地址的获取和操作，Java提供了一个类InetAddress供我们使用InetAddress:此类表示Internet协议(IP）地址。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("static InetAddress getByName(String host)")]),t._v(" "),s("td",[t._v("确定主机名称的IP地址。主机名称可以是机器名称，也可以是IP地址。")])]),t._v(" "),s("tr",[s("td",[t._v("String getHostName()")]),t._v(" "),s("td",[t._v("获取此IP地址的主机名")])]),t._v(" "),s("tr",[s("td",[t._v("String getHostAddress()")]),t._v(" "),s("td",[t._v("返回文本显示中的IP地址字符串")])])])]),t._v(" "),s("h2",{attrs:{id:"udp通信原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp通信原理"}},[t._v("#")]),t._v(" UDP通信原理")]),t._v(" "),s("p",[t._v("UDP协议是一种不可靠的网络协议，它在通信的两端各建立一个Socket对象，但是这两个Socket只是发送，接收数据的对象因此对于基于UDP协议的通信双方而言，没有所谓的客户端和服务器的概念。")]),t._v(" "),s("p",[t._v("Java提供了DatagramSocket类作为基于UDP协议的Socket。")]),t._v(" "),s("h3",{attrs:{id:"udp发送数据步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp发送数据步骤"}},[t._v("#")]),t._v(" "),s("strong",[t._v("UDP发送数据步骤")])]),t._v(" "),s("ol",[s("li",[t._v("创建发送端的Socket对象(DatagramSocket)")]),t._v(" "),s("li",[t._v("创建数据，并把数据打包")]),t._v(" "),s("li",[t._v("调用DatagramSocket对象的方法发送数据")]),t._v(" "),s("li",[t._v("关闭发送端")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建发送端的Socket对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramSocket")]),t._v(" ds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//封装数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello呀"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InetAddress")]),t._v(" inetAddress "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InetAddress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramPacket")]),t._v(" packet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramPacket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("inetAddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发送数据")]),t._v("\nds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("packet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭")]),t._v("\nds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"udp接收数据步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp接收数据步骤"}},[t._v("#")]),t._v(" "),s("strong",[t._v("UDP接收数据步骤")])]),t._v(" "),s("ol",[s("li",[t._v("创建接收端的Socket对象(DatagramSocket)")]),t._v(" "),s("li",[t._v("创建一个数据包，用于接收数据")]),t._v(" "),s("li",[t._v("调用DatagramSocket对象的方法接收数据解析数据包，并把数据在控制台显示")]),t._v(" "),s("li",[t._v("关闭接收端")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建接收端的Socket对象(DatagramSocket)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramSocket")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个数据包，用于接收数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramPacket")]),t._v(" packet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatagramPacket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("packet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用DatagramSocket对象的方法接收数据解析数据包，并把数据在控制台显示")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" packet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" packet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" dataStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dataStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭接收端")]),t._v("\nsocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"tcp通信原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp通信原理"}},[t._v("#")]),t._v(" TCP通信原理")]),t._v(" "),s("p",[t._v("TCP通信协议是一种可靠的网络协议，它在通信的两端各建立一个Socket对象，从而在通信的两端形成网络虚拟链路,一旦建立了虚拟的网络链路，两端的程序就可以通过虚拟链路进行通信。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220717193702255.png",alt:"image-20220717193702255"}})]),t._v(" "),s("p",[t._v("Java对基于TCP协议的的网络提供了良好的封装，使用Socket对象来代表两端的通信端口，并通过Socket产生IO流来进行网络通信Java为客户端提供了"),s("code",[t._v("Socket")]),t._v("类，为服务器端提供了"),s("code",[t._v("ServerSocket")]),t._v("类。")]),t._v(" "),s("h3",{attrs:{id:"tcp发送数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp发送数据"}},[t._v("#")]),t._v(" TCP发送数据")]),t._v(" "),s("p",[s("strong",[t._v("步骤")])]),t._v(" "),s("ol",[s("li",[t._v("创建客户端的Socket对象(Socket)")]),t._v(" "),s("li",[t._v("获取输出流，写数据")]),t._v(" "),s("li",[t._v("释放资源")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建客户端的Socket对象(Socket)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取输出流")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" os "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写数据")]),t._v("\nos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我来了"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//释放资源")]),t._v("\nsocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("输出结束标记：void shutDownOutPut();")])]),t._v(" "),s("h3",{attrs:{id:"tcp接收数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp接收数据"}},[t._v("#")]),t._v(" TCP接收数据")]),t._v(" "),s("p",[s("strong",[t._v("步骤")])]),t._v(" "),s("ol",[s("li",[t._v("创建服务器端的Socket对象(ServerSocket)")]),t._v(" "),s("li",[t._v("监听客户端链接，返回一个Socket对象")]),t._v(" "),s("li",[t._v("获取输入流，读数据，并把数据显示在控制台")]),t._v(" "),s("li",[t._v("释放资源")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建服务器端的Socket对象(ServerSocket)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerSocket")]),t._v(" serverSocket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听客户端链接，返回一个Socket对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serverSocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取输入流，读数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" inputStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" is"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"服务器："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//释放资源 ")]),t._v("\nserverSocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"十四-接口组成更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十四-接口组成更新"}},[t._v("#")]),t._v(" 十四.接口组成更新")]),t._v(" "),s("p",[s("strong",[t._v("接口的组成")])]),t._v(" "),s("ul",[s("li",[t._v("常量\n"),s("ul",[s("li",[t._v("public static final")])])]),t._v(" "),s("li",[t._v("抽象方法\n"),s("ul",[s("li",[t._v("public abstract")])])]),t._v(" "),s("li",[t._v("默认方法（Java8）")]),t._v(" "),s("li",[t._v("静态方法（Java8）")]),t._v(" "),s("li",[t._v("私有方法（Java9）")])]),t._v(" "),s("h2",{attrs:{id:"接口中默认方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口中默认方法"}},[t._v("#")]),t._v(" 接口中默认方法")]),t._v(" "),s("p",[s("strong",[t._v("接口中默认方法的定义格式：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("格式：public default  返回值类型  方法名(参数列表){}")])]),t._v(" "),s("li",[s("p",[t._v("范例: public default void show30 { }")])])]),t._v(" "),s("p",[s("strong",[t._v("接口中默认方法的注意事项")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("默认方法不是抽象方法，所以不强制被重写。")]),t._v(" "),s("li",[t._v("但是可以被重写，重写的时候去掉default关键字")]),t._v(" "),s("li",[t._v("public可以省略,default不能省略")])]),t._v(" "),s("h2",{attrs:{id:"接口中的静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口中的静态方法"}},[t._v("#")]),t._v(" "),s("strong",[t._v("接口中的静态方法")])]),t._v(" "),s("p",[t._v("接口中静态方法的定义格式：")]),t._v(" "),s("ul",[s("li",[t._v("格式：public static  返回值类型  方法名(参数列表){ }")])]),t._v(" "),s("p",[t._v("接口中静态方法的注意事项:")]),t._v(" "),s("ul",[s("li",[t._v("静态方法只能通过接口名调用，不能通过实现类名或者对象名调用")]),t._v(" "),s("li",[t._v("public可以省略,static不能省略")])]),t._v(" "),s("h2",{attrs:{id:"接口中私有方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口中私有方法"}},[t._v("#")]),t._v(" 接口中私有方法")]),t._v(" "),s("p",[t._v("Java 9中新增了带方法体的私有方法，这其实在Java8中就埋下了伏笔: Java8允许在接口中定义带方法体的默认方法和静态方法。这样可能就会引发一个问题:当两个默认方法或者静态方法中包含一段相同的代码实现时程序必然考虑将这段实现代码抽取成一个共性方法，而这个共性方法是不需要让别人使用的，因此用私有给隐藏起来这就是Java 9增加私有方法的必然性。")]),t._v(" "),s("p",[s("strong",[t._v("接口私有方法定义格式：")])]),t._v(" "),s("ul",[s("li",[t._v("格式1: private  返回值类型  方法名(参数列表){ }")]),t._v(" "),s("li",[t._v("范例1: private void show(){ }")]),t._v(" "),s("li",[t._v("格式2: private static  返回值类型  方法名(参数列表){ }")]),t._v(" "),s("li",[t._v("范例2: private static void method(){ }")])]),t._v(" "),s("h1",{attrs:{id:"十五-stream流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十五-stream流"}},[t._v("#")]),t._v(" 十五.Stream流")]),t._v(" "),s("h2",{attrs:{id:"stream流的生成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream流的生成"}},[t._v("#")]),t._v(" Stream流的生成")]),t._v(" "),s("p",[s("strong",[t._v("Stream流的使用")])]),t._v(" "),s("ul",[s("li",[t._v("生成流\n"),s("ul",[s("li",[t._v("通过数据源（集合，数组）等生成流")]),t._v(" "),s("li",[t._v("list.stream()")])])]),t._v(" "),s("li",[t._v("中间操作\n"),s("ul",[s("li",[t._v("一个流后面可以跟随零个或多个中间操作，其目的主要是打开流，做出某种程度的数据过滤/映射，然后返回一个新的流,交给下一个操作使用。")]),t._v(" "),s("li",[t._v("filter()")])])]),t._v(" "),s("li",[t._v("终结操作\n"),s("ul",[s("li",[t._v("一个流只能有一个终结操作，当这个操作执行后，流就被使用“光”了，无法再被操作。所以这必定是流的最后一个操作forEach()。")])])])]),t._v(" "),s("h2",{attrs:{id:"生成流的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成流的方式"}},[t._v("#")]),t._v(" 生成流的方式")]),t._v(" "),s("p",[s("strong",[t._v("Stream流的常见生成方式")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Collection体系的集合可以使用默认方法stream)生成流")]),t._v(" "),s("ul",[s("li",[t._v("default Stream"),s("E",[t._v(" stream()")])],1)])]),t._v(" "),s("li",[s("p",[t._v("Map体系的集合间接的生成流")]),t._v(" "),s("ul",[s("li",[t._v("map.values().stream()")])])]),t._v(" "),s("li",[s("p",[t._v("数组可以通过Stream接口的静态方法of(T... values)生成流。")]),t._v(" "),s("ul",[s("li",[t._v("Stream.of(arr)")])])])]),t._v(" "),s("h2",{attrs:{id:"中间操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间操作方法"}},[t._v("#")]),t._v(" 中间操作方法")]),t._v(" "),s("p",[s("strong",[t._v("Stream流常用方法")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Stream"),s("T",[t._v(" filter(Predicate predicate):用于对流中的数据进行过滤。")])],1),t._v(" "),s("p",[t._v("Predicate接口中的方法：")]),t._v(" "),s("p",[t._v("​\t\tboolean test(T t)：对给定的参数进行判断，返回一个布尔值。")])]),t._v(" "),s("li",[s("p",[t._v("Stream"),s("T",[t._v(" limit(long maxSize)：返回此流中的元素组成的流，截取前指定参数个数的数据。")])],1)]),t._v(" "),s("li",[s("p",[t._v("Stream"),s("T",[t._v(" skip(long n)：跳过指定参数个数的数据，返回由该流的剩余元素组成的流。")])],1)]),t._v(" "),s("li",[s("p",[t._v("static "),s("T",[t._v(" Stream"),s("T",[t._v(" concat(Stream a, Stream b)：合并a和b两个流为一个流。")])],1)],1)]),t._v(" "),s("li",[s("p",[t._v("Stream"),s("T",[t._v(" distinct()：返回由该流的不同元素（根据Objectequals(Object)）组成的流。")])],1)]),t._v(" "),s("li",[s("p",[t._v("Stream"),s("T",[t._v(" sorted):返回由此流的元素组成的流，根据自然顺序排序。")])],1)]),t._v(" "),s("li",[s("p",[t._v("Stream"),s("T",[t._v(" sorted(Comparator comparator):返回由该流的元素组成的流，根据提供的Comparator进行排序。")])],1)]),t._v(" "),s("li",[s("R",[t._v(" Stream"),s("R",[t._v(" map(Function mapper):返回由给定函数应用于此流的元素的结果组成的流。\n"),s("p",[t._v("Function接口中的方法：R apply(Tt)")])])],1)],1),t._v(" "),s("li",[s("p",[t._v("IntStream mapToInt(ToIntFunction mapper)：返回一个ntStream其中包含将给定函数应用于此流的元素的结果。IntStream：表示原始int流。\nTolntFunction接口中的方法：int applyAsInt(T value)")])]),t._v(" "),s("li",[s("p",[t._v("void forEach(Consumer action):对此流的每个元素执行操作Consumer接口中的方法\nvoid accept(T t)：对给定的参数执行此操作")])]),t._v(" "),s("li",[s("p",[t._v("long count()：返回此流中的元素数个")])])]),t._v(" "),s("h2",{attrs:{id:"stream流的收集操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream流的收集操作"}},[t._v("#")]),t._v(" Stream流的收集操作")]),t._v(" "),s("p",[s("strong",[t._v("Stream流的收集方法")])]),t._v(" "),s("ul",[s("li",[t._v("R collect(Collector collector)")]),t._v(" "),s("li",[t._v("但是这个收集方法的参数是一个Collector接口")])]),t._v(" "),s("p",[t._v("工具类Collectors提供了具体的收集方式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("public static "),s("T",[t._v(" Collector toList():把元素收集到List集合中")])],1)]),t._v(" "),s("li",[s("p",[t._v("public static "),s("T",[t._v(" Collector toSet():把元素收集到Set集合中")])],1)]),t._v(" "),s("li",[s("p",[t._v("public static Collector toMap(Function keyMapper,Function  valueMapper):把元素收集到Map集合中")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" collect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"十六-反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十六-反射"}},[t._v("#")]),t._v(" 十六.反射")]),t._v(" "),s("h2",{attrs:{id:"类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载器"}},[t._v("#")]),t._v(" 类加载器")]),t._v(" "),s("p",[s("strong",[t._v("类加载")])]),t._v(" "),s("p",[t._v("当程序要使用某个类时，如果该类还未被加载到内存中，则系统会通过类的加载，类的连接，类的初始化这三个步骤来对淡进行初始化。如果不出现意外情况，JVM将会连续完成故三个步骤，所以有时也把这三个步骤统称为类加载或者类初始化。")]),t._v(" "),s("p",[s("strong",[t._v("类的加载")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("就是指将class文件读入内存，并为之创建一个java.lang.Class对象。")])]),t._v(" "),s("li",[s("p",[t._v("任何类被使用时，系统都会为之建立一个java.lang.Class对象。")])])]),t._v(" "),s("p",[s("strong",[t._v("类的连接")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("验证阶段：用于检验被加载的类是否有正确的内部结构，并和其他类协调一致。")])]),t._v(" "),s("li",[s("p",[t._v("准备阶段：负责为类的类变量分配内存，并设置默认初始化值。")])]),t._v(" "),s("li",[s("p",[t._v("解析阶段：将类的二进制数据中的符号引用替换为直接引用。")])])]),t._v(" "),s("p",[s("strong",[t._v("类的初始化")])]),t._v(" "),s("ul",[s("li",[t._v("在该阶段，主要就是对类变量进行初始化。")])]),t._v(" "),s("p",[s("strong",[t._v("类的初始化步骤")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("假如类还未被加载和连接，则程序先加载并连接该类。")])]),t._v(" "),s("li",[s("p",[t._v("假如该类的直接父类还未被初始化，则先初始化其直接父类。")])]),t._v(" "),s("li",[s("p",[t._v("假如类中有初始化语句，则系统依次执行这些初始化语句。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：在执行第2个步骤的时候，系统对直接父类的初始化步骤也遵循初始化步骤1-3")])]),t._v(" "),s("p",[s("strong",[t._v("类的初始化时机")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建类的实例")])]),t._v(" "),s("li",[s("p",[t._v("调用类的类方法")])]),t._v(" "),s("li",[s("p",[t._v("访问类或者接口的类变量，或者为该类变量赋值")])]),t._v(" "),s("li",[s("p",[t._v("使用反射方式来强制创建某个类或接口对应的java.lang.Class对象")])]),t._v(" "),s("li",[s("p",[t._v("初始化某个类的子类")])]),t._v(" "),s("li",[s("p",[t._v("直接使用java.exe命令来运行某个主类")])])]),t._v(" "),s("p",[s("strong",[t._v("类加载器的作用")])]),t._v(" "),s("ul",[s("li",[t._v("负责将.class文件加载到内存中，并为之生成对应的java.lang.Class对象")]),t._v(" "),s("li",[t._v("虽然我们不用过分关心类加载机制，但是了解这个机制我们就能更好的理解程序的运行")])]),t._v(" "),s("p",[s("strong",[t._v("JVM的类加载机制")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("全盘负责：就是当一个类加载器负责加载某个Class时，该Class所依赖的和弓|用的其他Class也将由该类加载器负责载入，除非显示使用另外-个类载器来载入")])]),t._v(" "),s("li",[s("p",[t._v("父类委托：就是当一个类加载器负责加载某个Class时，先让父类加载器试图加载该Class, 只有在父类加载器无法加载该类时才尝试从自己的类路径中加载该类")])]),t._v(" "),s("li",[s("p",[t._v("缓存机制：保证所有加载过的Class都会被缓存，当程序需要使用某个Class对象时，类载器先从缓存区中搜索该Class,只有当缓存区中不存在该Class对象时，统才会读取该类对应的二进制数据，并將其转换成Class对象，存储到缓存区")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("类加载器")])])]),t._v(" "),s("p",[t._v("ClassLoader：是负责加载类的对象")]),t._v(" "),s("p",[t._v("Java运行时具有以下内置类加载器")]),t._v(" "),s("ul",[s("li",[t._v("Bootstrap class loader：它是虚拟机的内置类加载器，通常表示为null，并且没有父null。")]),t._v(" "),s("li",[t._v("Platform class loader：平台类加载器可以看到所有平台类，平台类包括由平台类加载器或其祖先定义的Java SE平台API,其实现类和JDK特定的运行时类。")]),t._v(" "),s("li",[t._v("System class loader：它也被称为应用程序类加载器，与平台类加载器不同。系统类加载器通常用于定义应用程序类路径，模块路径和JDK特定工具上的类。")])]),t._v(" "),s("h2",{attrs:{id:"反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[t._v("#")]),t._v(" 反射")]),t._v(" "),s("p",[s("strong",[t._v("概述：")])]),t._v(" "),s("p",[t._v("Java反射机制：是指在运行时去获取一个类的变量和方法信息。然后通过获取到的信息来创建对象，调用方法的一种机制。由于这种动态性，可以极大的增强程序的灵活性，程序不用在编译期就完成确定，在运行期仍然可以扩展。")]),t._v(" "),s("h2",{attrs:{id:"反射获取class类对象-字节码对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射获取class类对象-字节码对象"}},[t._v("#")]),t._v(" "),s("strong",[t._v("反射获取Class类对象（字节码对象）")])]),t._v(" "),s("p",[t._v("我们要想通过反射去使用一个类，首先我们要获取到该类的字节码文件对象，也就是类型为Class类型的对象。")]),t._v(" "),s("p",[t._v("这里我们提供三种方式获取Class类型的对象")]),t._v(" "),s("ul",[s("li",[t._v("使用类的class属性来获取该类对应的Class对象。举例: Studentclass将会返回Student类对应的Class对象")]),t._v(" "),s("li",[t._v("调用对象的getClass()方法，返回该对象所属类对应的Class对象该方法是Object类中的方法，所有的Java对象都可以调用该方法")]),t._v(" "),s("li",[t._v("使用Class类中的静态方法forName(String className)，该方法需要传入字符串参数，该字符串参数的值是某个类的全路径，也就是完整包名的路径。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c1 = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectDemo")]),t._v(" rd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" c2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c2 = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" c3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.reflect.ReflectDemo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c3 = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c1 == c2 == c3")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("我们可以通过字节码对象的newInstance()方法来实例一个该字节码对象。")])]),t._v(" "),s("h2",{attrs:{id:"反射获取构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射获取构造方法"}},[t._v("#")]),t._v(" 反射获取构造方法")]),t._v(" "),s("p",[s("strong",[t._v("Class类中用于获取构造方法的方法")])]),t._v(" "),s("p",[t._v("Constructor<?>[] getConstructors():返回所有公共构造方法对象的数组")]),t._v(" "),s("p",[t._v("Constructor<?>[] getDeclaredConstructors():返回所有构造方法对象的数组")]),t._v(" "),s("p",[t._v("Constructor"),s("T",[t._v(" getConstructor(Class<?> ... parameterTypes):返回单个公共构造方法对象。")])],1),t._v(" "),s("p",[t._v("Constructor"),s("T",[t._v(" getDeclaredConstructor(Class<?>... parameterTypes):返回单个构造方法对象")])],1),t._v(" "),s("p",[s("strong",[t._v("Constructor类中用于创建对象的方法")])]),t._v(" "),s("p",[t._v("T newlnstance(Object... initargs)：根据指定的构造方法创建对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取类字节码对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" aClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.reflect.Test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取字节码对象构造方法数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" cons  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeclaredConstructors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历构造方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),t._v(" con "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cons"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("con"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---------------------------"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据参数类型获取字节码对象对应的构造方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" con "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过构造方法创建实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" con"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("一般来说，无法通过私有的构造方法去实例化对象，但是在反射里就可以。通过调用构造方法的SetAccessible()方法。将flag设为true即可。")]),t._v(" "),s("p",[t._v("public void setAccessible (boolean flag)")]),t._v(" "),s("p",[t._v("将此反射对象的accessible标志设置为指示的布尔值。值为true表示反射对象应该在使用Java语言访问控制时抑制检查。值为false表示反射对象应该在使用Java语言访问控制时执行检查,并在类描述中指出变体。")])]),t._v(" "),s("h2",{attrs:{id:"反射获取成员变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射获取成员变量"}},[t._v("#")]),t._v(" 反射获取成员变量")]),t._v(" "),s("p",[s("strong",[t._v("Class类中用于获取成员变量的方法")])]),t._v(" "),s("p",[t._v("Field[]getFields()：返回所有公共成员变量对象的数组。")]),t._v(" "),s("p",[t._v("Field[] getDeclaredFields()：返回所有成员变量对象的数组")]),t._v(" "),s("p",[t._v("Field getField(String name)：返回单个公共成员变量对象")]),t._v(" "),s("p",[t._v("Field getDeclaredField(String name)：返回单个成员变量对象")]),t._v(" "),s("p",[s("strong",[t._v("Field类中用于给成员变量赋值的方法")])]),t._v(" "),s("p",[t._v("void set(Object obj, Object value)：给obj对象的成员变量赋值为value")]),t._v(" "),s("h2",{attrs:{id:"反射获取成员方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射获取成员方法"}},[t._v("#")]),t._v(" 反射获取成员方法")]),t._v(" "),s("p",[s("strong",[t._v("Class类中用于获取成员方法的方法")])]),t._v(" "),s("p",[t._v("Method[] getMethods()：返回所有公共成员方法对象的数组，包括继承的。")]),t._v(" "),s("p",[t._v("Method[] getDeclaredMethods)：返回所有成员方法对象的数组，不包括继承的。")]),t._v(" "),s("p",[t._v("Method getMethod(String name, Class<?>... parameterTypes)：返回单个公共成员方法对象Method 。")]),t._v(" "),s("p",[t._v("Method getDeclaredMethod(String name, Class<?>... parameterTypes)：返回单个成员方法对象。")]),t._v(" "),s("p",[s("strong",[t._v("Method类中用于调用成员方法的方法")])]),t._v(" "),s("p",[t._v("0bject invoke(Object obj, Object..args)：调用obj对象的成员方法，参数是args,返回值是Object类型。")]),t._v(" "),s("h2",{attrs:{id:"反射越过集合泛型检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射越过集合泛型检查"}},[t._v("#")]),t._v(" 反射越过集合泛型检查")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" array "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" arrayClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arrayClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nadd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"反射通过配置文件运行类方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射通过配置文件运行类方法"}},[t._v("#")]),t._v(" 反射通过配置文件运行类方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      创建Properties类加载对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" prop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),t._v(" fileReader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"class.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        加载数据")]),t._v("\n        prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileReader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fileReader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        根据键获取类名和方法名")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" className "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"className"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"methodName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        拿到类名获取字节码对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" aClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("className"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        通过字节码对象构建类实例")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        通过反射获取方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" study "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        执行对应方法")]),t._v("\n        study"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"十七-java模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十七-java模块化"}},[t._v("#")]),t._v(" 十七.Java模块化")]),t._v(" "),s("h2",{attrs:{id:"模块化概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化概述"}},[t._v("#")]),t._v(" 模块化概述")]),t._v(" "),s("p",[t._v("Java语言随着这些年的发展已经成为了一门影响深远的编程语言，无数平台，系统都采用Java语言编写。但是，伴随着发展，Java也越来越庞大，逐渐发展成为一门“臃肿”的语言。而且，无论是运行一个大型的软件系统，还是运行一个小的程序，即使程序只需要使用Java的部分核心功能，VM也要加载整个JRE环境。为了给Java“瘦身”，让Java实现轻量化，Java 9正式的推出了模块化系统。Java被拆分为N多个模块，并允许Java程序可以根据需要选择加载程序必须的Java模块，这样就可以让Java以轻量化的方式来运行。")]),t._v(" "),s("p",[t._v("其实，Java 7的时候已经提出了模块化的概念，但由于其过于复杂，Java7，Java8都一直未能真正推出，直到Java 9才真正成熟起来。对于Java语言来说，模块化系统是一次真正的自我革新，这种革新使得“古老而庞大”的Java语言重新焕发年轻的活力。")]),t._v(" "),s("h1",{attrs:{id:"十八-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十八-注解"}},[t._v("#")]),t._v(" 十八.注解")]),t._v(" "),s("p",[t._v("**概念：**说明程序的。给计算机看的")]),t._v(" "),s("p",[t._v("**注释：**用文字描述程序的。给程序员看的")]),t._v(" "),s("p",[t._v("**定义：**注解(Annotation)，也叫元数据。一种代码级别的说明。它是JXK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元秦进行说明，注释。")]),t._v(" "),s("p",[s("strong",[t._v("作用")])]),t._v(" "),s("ul",[s("li",[t._v("编写文档：通过代码里标识的元数据生成文档【生成文档doc文档】")]),t._v(" "),s("li",[t._v("代码分析：通过代码里标识的元数据对代码进行分析【使用反射】")]),t._v(" "),s("li",[t._v("编译检查：通过代码里标识的元数据让编译器能够实现基本的编译检查【override】")])]),t._v(" "),s("h2",{attrs:{id:"jdk内置注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk内置注解"}},[t._v("#")]),t._v(" JDK内置注解")]),t._v(" "),s("ul",[s("li",[t._v("@Override：用来检测被该注解标注的方法是否是继承自父类（父接口）")]),t._v(" "),s("li",[t._v("@Deprecated：将该注解标注的内容，已过时")]),t._v(" "),s("li",[t._v('@SuppressWarnings：压制警告，金庸编译器提示的警告，可以在类上使用，参数["all",,,]')]),t._v(" "),s("li",[t._v("@Overload：重写父类（父接口）方法")]),t._v(" "),s("li",[t._v("@SafeVarargs：参数安全类型注解。它的目的是提醒开发者不要用参数做一些不安全的操作,它的存在会阻止编译器产生 unchecked 这样的警告")]),t._v(" "),s("li",[t._v("@FunctionalInterface：函数式接口 (Functional Interface) 就是一个具有一个方法的普通接口。")])]),t._v(" "),s("h2",{attrs:{id:"自定义注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义注解"}},[t._v("#")]),t._v(" 自定义注解")]),t._v(" "),s("p",[s("strong",[t._v("自定义注解格式")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("元注解\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" 注解名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注解的本质")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyAnno")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Annotation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注解本质上就是一个接口，该接口继承Annotation接口")]),t._v("\n")])])]),s("p",[s("strong",[t._v("属性")])]),t._v(" "),s("p",[t._v("在注解接口中的抽象方法")]),t._v(" "),s("p",[t._v("属性要求：")]),t._v(" "),s("ul",[s("li",[t._v("返回值类型要求：基本数据类型、String、枚举、注解、以上类型的数组。")]),t._v(" "),s("li",[t._v("定义了属性（抽象方法），在使用时需要给所有属性赋值。\n"),s("ul",[s("li",[t._v("如果定义属性是使用了default关键字给属性默认初始化值，则使用注解时可以不进行属性的赋值")]),t._v(" "),s("li",[t._v("如果定义的属性名称为"),s("code",[t._v("value")]),t._v("时，value关键字可以不写，直接赋值")])])])]),t._v(" "),s("p",[s("strong",[t._v("定义注解")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyAnno")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("per")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyAnno2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anno2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("使用注解")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnoDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("show1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王五"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("per "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("per")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anno2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anno2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MyAnno")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"元注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元注解"}},[t._v("#")]),t._v(" 元注解")]),t._v(" "),s("p",[t._v("元注解是用于描述注解的注解")]),t._v(" "),s("ul",[s("li",[t._v("@Target：描述能够作用的位置\n"),s("ul",[s("li",[t._v("ElementType取值\n"),s("ul",[s("li",[t._v("TYPE：可以作用于类上")]),t._v(" "),s("li",[t._v("METHOD：可以作用于方法上")]),t._v(" "),s("li",[t._v("FIELD：可以作用于成员变量上")])])])])]),t._v(" "),s("li",[t._v("@Retention：描述注解被保留的阶段\n"),s("ul",[s("li",[t._v("RetentionPolicy取值\n"),s("ul",[s("li",[t._v("RUNTIME：会保留到class字节码文件中，并被JVM读取到")]),t._v(" "),s("li",[t._v("CLASS：会保留到class字节码文件中，不会被JVM读取到")]),t._v(" "),s("li",[t._v("SOURCE：只保留在源代码中")])])])])]),t._v(" "),s("li",[t._v("@Documented：描述注解是否被抽取到api文档中")]),t._v(" "),s("li",[t._v("@Inherited：描述注解是否被子类继承")])]),t._v(" "),s("h1",{attrs:{id:"十九-多线程编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十九-多线程编程"}},[t._v("#")]),t._v(" 十九.多线程编程")]),t._v(" "),s("h2",{attrs:{id:"多线程的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多线程的实现方式"}},[t._v("#")]),t._v(" 多线程的实现方式")]),t._v(" "),s("h3",{attrs:{id:"方式1-继承thread类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式1-继承thread类"}},[t._v("#")]),t._v(" "),s("strong",[t._v("方式1：继承Thread类")])]),t._v(" "),s("ol",[s("li",[t._v("定义一个类MyThread继承Thread类")]),t._v(" "),s("li",[t._v("在MyThread类中重写run()方法")]),t._v(" "),s("li",[t._v("创建MyThread类的对象")]),t._v(" "),s("li",[t._v("启动线程")])]),t._v(" "),s("p",[s("strong",[t._v("两个小问题：")])]),t._v(" "),s("ul",[s("li",[t._v("为什么要重写run()方法?\n"),s("ul",[s("li",[t._v("因为run()是用来封装被线程执行的代码")])])]),t._v(" "),s("li",[t._v("run()方法和start()方法的区别?\n"),s("ul",[s("li",[t._v("run():  封装线程执行的代码，直接调用，相当于普通方法的调用")]),t._v(" "),s("li",[t._v("start():启动线程;然后由JVM调用此线程的run()方法")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadDemo")]),t._v(" td "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        td"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关羽"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        td"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"方式2-实现runnable接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式2-实现runnable接口"}},[t._v("#")]),t._v(" 方式2：实现Runnable接口")]),t._v(" "),s("ol",[s("li",[t._v("定义一个类MyRunnable实现Runnable接口")]),t._v(" "),s("li",[t._v("在MyRunnable类中重写run()方法")]),t._v(" "),s("li",[t._v("创建MyRunnable类的对象")]),t._v(" "),s("li",[t._v("创建Thread类的对象，把MyRunnable对象作为构造方法的参数")]),t._v(" "),s("li",[t._v("启动线程")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableDemo")]),t._v(" runnableDemo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runnableDemo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈拉少"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"设置和获取线程名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置和获取线程名称"}},[t._v("#")]),t._v(" 设置和获取线程名称")]),t._v(" "),s("p",[s("strong",[t._v("Thread类中设置和获取线程名称的方法")])]),t._v(" "),s("ul",[s("li",[t._v("void setName(Stringname)：将此线程的名称更改为等于参数")]),t._v(" "),s("li",[t._v("nameString getName()：返回此线程的名称")])]),t._v(" "),s("h2",{attrs:{id:"线程调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程调度"}},[t._v("#")]),t._v(" 线程调度")]),t._v(" "),s("p",[s("strong",[t._v("线程有两种调度模型")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("分时调度模型：所有线程轮流使用CPU的使用权，平均分配每个线程占用CPU的时间片。")])]),t._v(" "),s("li",[s("p",[t._v("抢占式调度模型：优先让优先级高的线程使用CPU，如果线程的优先级相同，那么会随机选择一个优先级高的线程获取的CPU时间片相对多一些。")])])]),t._v(" "),s("p",[t._v("Java使用的是抢占式调度模型。")]),t._v(" "),s("p",[t._v("假如计算机只有一个CPU，那么CPU在某一个时刻只能执行一条指令，线程只有得到CPU时间片，也就是使用权,才可以执行指令。所以说多线程程序的执行是有"),s("code",[t._v("随机性")]),t._v("，因为谁抢到CPU的使用权是不一定的。")]),t._v(" "),s("p",[s("strong",[t._v("Thread类中设置和获取线程优先级的方法")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("public final int getPriority()：返回此线程的优先级。")])]),t._v(" "),s("li",[s("p",[t._v("public final void setPriority(int newPriority)：更改此线程的优先级。")])])]),t._v(" "),s("h2",{attrs:{id:"线程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程控制"}},[t._v("#")]),t._v(" 线程控制")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("static void sleep(long millis)")]),t._v(" "),s("td",[t._v("使当前正在执行的线程停留（暂停执行）指定的毫秒数。")])]),t._v(" "),s("tr",[s("td",[t._v("void join()")]),t._v(" "),s("td",[t._v("等待这个线程死亡。")])]),t._v(" "),s("tr",[s("td",[t._v("void setDaemon(boolean on)")]),t._v(" "),s("td",[t._v("将此线程标记为守护线程，当运行的线程都是守护线程时，Java虚拟机将退出。")])])])]),t._v(" "),s("h2",{attrs:{id:"线程生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程生命周期"}},[t._v("#")]),t._v(" 线程生命周期")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.fancynet.cn/typora_img/image-20220721130405837.png",alt:"image-20220721130405837"}})]),t._v(" "),s("h2",{attrs:{id:"线程同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程同步"}},[t._v("#")]),t._v(" 线程同步")]),t._v(" "),s("h3",{attrs:{id:"同步代码块解决线程安全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步代码块解决线程安全问题"}},[t._v("#")]),t._v(" 同步代码块解决线程安全问题")]),t._v(" "),s("p",[t._v("锁多条语句操作共享数据，可以使用同步代码块实现。")]),t._v(" "),s("p",[s("strong",[t._v("格式")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("synchronized (任意对象){ 多条语句操作共享数据的代码 }\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在出售第"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张票"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                tickets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("同步的好处和弊端")])]),t._v(" "),s("p",[t._v("好处: 解决了多线程的数据安全问题.")]),t._v(" "),s("p",[t._v("弊端: 当线程很多时，因为每个线程都会去判断同步上的锁，这是很耗费资源的，无形中会降低程序的运行效率.")]),t._v(" "),s("h3",{attrs:{id:"同步方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步方法"}},[t._v("#")]),t._v(" 同步方法")]),t._v(" "),s("p",[t._v("同步方法：就是把synchronized关键字加到方法上。")]),t._v(" "),s("p",[s("strong",[t._v("格式")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("修饰符 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" 返回值类型 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("方法参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sellTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在出售第"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张票"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        tickets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("同步方法的锁对象是什么呢?")]),t._v(" "),s("ul",[s("li",[t._v("同步方法：==this==")]),t._v(" "),s("li",[t._v("同步静态方法：==类名.class==")])]),t._v(" "),s("p",[t._v("同步静态方法:就是把"),s("code",[t._v("synchronized")]),t._v("关键字加到静态方法上")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("修饰符 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" 返回值类型 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("方法参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sellTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在出售第"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张票"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        tickets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"线程安全的类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全的类"}},[t._v("#")]),t._v(" 线程安全的类")]),t._v(" "),s("p",[s("strong",[t._v("StringBuffer")])]),t._v(" "),s("ul",[s("li",[t._v("线程安全，可变的字符序列")]),t._v(" "),s("li",[t._v("从版本JDK5开始，被StringBuilder替代。通常应该使用StringBuilder类，因为它支持所有相同的操作，但它更快，因为它不执行同步")])]),t._v(" "),s("p",[s("strong",[t._v("Vector")])]),t._v(" "),s("ul",[s("li",[t._v("从Java 2平台v1.2开始，该类改进了List接口，使其成为Java CollectionsFramework的成员与新的集合实现不同， Vector被同步。如果不需要线程安全的实现，建议使用ArrayList代替Vector")])]),t._v(" "),s("p",[s("strong",[t._v("Hashtable")])]),t._v(" "),s("ul",[s("li",[t._v("该类实现了一个哈希表，它将键映射到值。任何非null对象都可以用作键或者值")]),t._v(" "),s("li",[t._v("从Java 2平台v1.2开始，该类进行了改进，实现了Map接口，使其成为JavaCollections Framework的成员。与新的集合实现不同，Hashtable被同步。如果不需要线程安全的实现，建议使用HashMap代替Hashtable")])]),t._v(" "),s("h2",{attrs:{id:"lock锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock锁"}},[t._v("#")]),t._v(" Lock锁")]),t._v(" "),s("p",[t._v("虽然我们可以理解同步代码块和同步方法的锁对象问题，但是我们并没有直接看到在哪里加上了锁，在哪里释放了锁,为了更清晰的表达如何加锁和释放锁，JDK5以后提供了一个新的锁对象Lock。")]),t._v(" "),s("p",[t._v("Lock实现提供比使用synchronized方法和语句可以获得更广泛的锁定操作。")]),t._v(" "),s("p",[t._v("Lock中提供了获得锁和释放锁的方法：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("void lock()：获得锁")])]),t._v(" "),s("li",[s("p",[t._v("void unlock()：释放锁")])])]),t._v(" "),s("p",[t._v("Lock是接口不能直接实例化，这里采用它的实现类"),s("code",[t._v("ReentrantLock")]),t._v("来实例化。")]),t._v(" "),s("p",[t._v("ReentrantLock的构造方法\nReentrantLock()：创建一个ReentrantLock的实例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sellTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在出售第"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tickets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张票"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            tickets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"生产者-消费者模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产者-消费者模式"}},[t._v("#")]),t._v(" 生产者/消费者模式")]),t._v(" "),s("p",[t._v("所谓生产者消费者问题，实际上主要是包含了两类线程：")]),t._v(" "),s("ul",[s("li",[t._v("一类是生产者线程用于生产数据。")]),t._v(" "),s("li",[t._v("一类是消费者线程用于消费数据。")])]),t._v(" "),s("p",[t._v("为了解耦生产者和消费者的关系，通常会采用共享的数据区域，就像是一个仓库。")]),t._v(" "),s("p",[t._v("生产者生产数据之后直接放置在共享数据区中，并不需要关心消费者的行为。")]),t._v(" "),s("div",{staticClass:"language-mermaid extra-class"},[s("pre",{pre:!0,attrs:{class:"language-mermaid"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" LR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n生产者"),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("共享数据区域"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n消费者"),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("共享数据区域\n")])])]),s("p",[t._v("为了体现生产和消费过程中的等待和唤醒，Java就提供了几个方法供我们使用，这几个方法在Object类中Object类的等待和唤醒方法：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("void wait()")]),t._v(" "),s("td",[t._v("导致当前线程等待，直到另一个线程调用该对象的notify()方法或notifyAll()方法")])]),t._v(" "),s("tr",[s("td",[t._v("void notify()")]),t._v(" "),s("td",[t._v("唤醒正在等待对象监视器的单个线程")])]),t._v(" "),s("tr",[s("td",[t._v("void notifyAll()")]),t._v(" "),s("td",[t._v("唤醒正在等待对象监视器的所有线程")])])])]),t._v(" "),s("h1",{attrs:{id:"拓展知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓展知识"}},[t._v("#")]),t._v(" 拓展知识")]),t._v(" "),s("p",[s("strong",[t._v("java内置命令")])]),t._v(" "),s("ul",[s("li",[t._v("java：执行Java字节码文件")]),t._v(" "),s("li",[t._v("javac：编译Java文件")]),t._v(" "),s("li",[t._v("javadoc：生成类描述文档")]),t._v(" "),s("li",[t._v("javap：反编译字节码文件")])])])}),[],!1,null,null,null);s.default=e.exports}}]);