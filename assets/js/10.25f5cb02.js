(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{282:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),s("h2",{attrs:{id:"第一章-初识-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章-初识-docker"}},[a._v("#")]),a._v(" 第一章 初识 Docker")]),a._v(" "),s("h3",{attrs:{id:"_1-1-docker概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-docker概念"}},[a._v("#")]),a._v(" 1.1 Docker概念")]),a._v(" "),s("ul",[s("li",[a._v("Docker是一个开源的应用容器引擎")]),a._v(" "),s("li",[a._v("诞生于2013年初，基于Go语言实现，dotCloud公司出品（后改名Docker Inc）")]),a._v(" "),s("li",[a._v("Docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上")]),a._v(" "),s("li",[a._v("容器是完全使用沙箱机制，相互隔离")]),a._v(" "),s("li",[a._v("容器性能开销极低")])]),a._v(" "),s("p",[a._v("​")]),a._v(" "),s("p",[a._v("​\tDocker可以运行在在MAC、Windows、CentOS、UBUNTU等操作系统上")]),a._v(" "),s("p",[a._v("​\t官网："),s("code",[a._v("https://www.docker.com")])]),a._v(" "),s("h3",{attrs:{id:"_1-2-安装docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装docker"}},[a._v("#")]),a._v(" 1.2 安装Docker")]),a._v(" "),s("p",[a._v("​\t1. yum包更新到最新")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum update\n")])])]),s("p",[a._v("​\t2. 安装需要的软件包，yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" yum-utils device-mapper-persistent-data lvm2\n")])])]),s("p",[a._v("​\t3. 设置yum源")]),a._v(" "),s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),s("p",[a._v("​\t4. 安装docker，出现输入的界面都按 y")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" docker-ce\n")])])]),s("p",[a._v("​\t5. 查看docker版本，验证是否成功")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker -v\n")])])]),s("h3",{attrs:{id:"_1-3-docker架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-docker架构"}},[a._v("#")]),a._v(" 1.3 Docker架构")]),a._v(" "),s("ul",[s("li",[a._v("镜像（Image）：Docker镜像（Image），就相当于是一个root文件系统。比如官方镜像 ubuntu:16.04就包含了完整的一套Ubuntu16.04最小系统的root文件系统")]),a._v(" "),s("li",[a._v("容器（Container）：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和对象一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等")]),a._v(" "),s("li",[a._v("仓库（Repository）：仓库可以看成一个代码控制中心，用来保存镜像")])]),a._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5C15640%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220614125001525.png",alt:"image-20220614125001525"}})]),a._v(" "),s("h3",{attrs:{id:"_1-4-配置docker镜像加速器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-配置docker镜像加速器"}},[a._v("#")]),a._v(" 1.4 配置Docker镜像加速器")]),a._v(" "),s("p",[a._v("​\t默认情况下，将从docker hub（https://hub.docker.com/）上下载docker镜像，太慢。一般都会配置镜像加速器")]),a._v(" "),s("ul",[s("li",[a._v("USTC：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）")]),a._v(" "),s("li",[a._v("阿里云")]),a._v(" "),s("li",[a._v("网易云")]),a._v(" "),s("li",[a._v("腾讯云")])]),a._v(" "),s("p",[a._v("​")]),a._v(" "),s("p",[a._v("​\t在这里我们用阿里云镜像加速器，登陆阿里云查看个人加速地址")]),a._v(" "),s("p",[a._v("​\t注意：用阿里云时，每个人家加速器地址不同，然后在终端输入下面指令")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" /etc/docker\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" /etc/docker/daemon.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<-")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'EOF\'\n{\n  "registry-mirrors": ["https://eob5atc6.mirror.aliyuncs.com"]\n}\nEOF')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl daemon-reload\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("###上面操作完成后输入下面代码测试是否成功")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/docker/daemon.json\n")])])]),s("h2",{attrs:{id:"第二章-docker-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-docker-命令"}},[a._v("#")]),a._v(" 第二章 Docker 命令")]),a._v(" "),s("h3",{attrs:{id:"_2-1-docker-服务相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-docker-服务相关命令"}},[a._v("#")]),a._v(" 2.1 Docker 服务相关命令")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("启动docker 服务：")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("停止docker 服务：")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl stop "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("重启docker 服务：")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("查看docker 服务状态：")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl status "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("设置开机启动docker：")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])])])])])]),a._v(" "),s("h3",{attrs:{id:"_2-2-docker-镜像相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-docker-镜像相关命令"}},[a._v("#")]),a._v(" 2.2 Docker 镜像相关命令")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("查看镜像：查看本地所有的镜像")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有镜像的id")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("搜索镜像：从网络中查找需要的镜像")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker search 镜像名称\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("拉取镜像：从Docker 仓库下载镜像到本地，镜像名称格式为"),s("code",[a._v("名称:版本号")]),a._v("，如果版本号不指定则是最新的版本。如果不知道镜像版本，可以去docker hub 搜索对应镜像查看")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull 镜像名称\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("删除镜像：删除本地镜像")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi 镜像id/名称号:版本号 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除指定本地镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'docker images -q'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除所有本地镜像")]),a._v("\n")])])])])])])]),a._v(" "),s("h3",{attrs:{id:"_2-3-docker-容器相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-docker-容器相关命令"}},[a._v("#")]),a._v(" 2.3 Docker 容器相关命令")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("查看容器")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看正在运行的容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有容器")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("创建并启动容器")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run 参数 版本:版本号 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("/bin/bash"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#默认为/bin/bash")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("参数说明：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-i")]),a._v("：保持容器运行。通常与"),s("code",[a._v("-t")]),a._v("同时使用。加入"),s("code",[a._v("it")]),a._v("这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭")]),a._v(" "),s("li",[s("code",[a._v("-t")]),a._v("：为容器重新分配一个伪输入终端，通常与"),s("code",[a._v("-i")]),a._v("同时使用")]),a._v(" "),s("li",[s("code",[a._v("-d")]),a._v("：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用"),s("code",[a._v("docker exec")]),a._v("进入容器"),s("code",[a._v("docker exec -it c2 /bin/bash")]),a._v("。退出后，容器不会关闭")]),a._v(" "),s("li",[s("code",[a._v("-it")]),a._v("创建的容器一般称为交互式容器；"),s("code",[a._v("-id")]),a._v("创建的容器一般称为守护式容器")]),a._v(" "),s("li",[s("code",[a._v("--name")]),a._v("：为创建的容器命名")])])])])]),a._v(" "),s("li",[s("p",[a._v("进入容器")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" 参数 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#退出容器，容器不会关闭")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("停止容器")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop 容器名称\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("启动容器")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start 容器名称\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("删除容器：如果容器是运行状态则删除失败，需要停止容器参能删除")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker rm 容器名称\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("查看容器信息")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect 容器名称\n")])])])])])])]),a._v(" "),s("h2",{attrs:{id:"第三章-docker-容器的数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-docker-容器的数据卷"}},[a._v("#")]),a._v(" 第三章 Docker 容器的数据卷")]),a._v(" "),s("h3",{attrs:{id:"_3-1-数据卷概念及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-数据卷概念及作用"}},[a._v("#")]),a._v(" 3.1 数据卷概念及作用")]),a._v(" "),s("p",[a._v("​\t思考：")]),a._v(" "),s("ul",[s("li",[a._v("Docker 容器删除后，在容器中产生的数据还在吗？")]),a._v(" "),s("li",[a._v("Docker 容器和外部继器可以交换文件吗？")]),a._v(" "),s("li",[a._v("容器之间想要进行数据交互？")])]),a._v(" "),s("p",[s("strong",[a._v("数据卷")])]),a._v(" "),s("ul",[s("li",[a._v("数据卷是宿主机中的一个目录或文件")]),a._v(" "),s("li",[a._v("当容器目录和数据卷目录绑定后，对方的修改会立即同步")]),a._v(" "),s("li",[a._v("一个数据卷可以被多个容器同时挂载")]),a._v(" "),s("li",[a._v("一个容器也可以被挂载多个数据卷")])]),a._v(" "),s("p",[s("strong",[a._v("数据卷的作用")])]),a._v(" "),s("ul",[s("li",[a._v("容器数据持久化")]),a._v(" "),s("li",[a._v("外部计价器和容器间接通信")]),a._v(" "),s("li",[a._v("容器之间数据交换")])]),a._v(" "),s("h3",{attrs:{id:"_3-2-配置数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-配置数据卷"}},[a._v("#")]),a._v(" 3.2 配置数据卷")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("创建启动容器时，使用"),s("code",[a._v("-v")]),a._v("参数 设置数据卷")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker run ... -v 宿主机目录(文件):容器内目录(文件) ...\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("注意事项：")]),a._v(" "),s("ol",[s("li",[a._v("目录必须是绝对路径")]),a._v(" "),s("li",[a._v("如果目录不存在，会自动创建")]),a._v(" "),s("li",[a._v("可以挂载多个数据卷")])])])]),a._v(" "),s("h3",{attrs:{id:"_3-3-配置数据卷容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-配置数据卷容器"}},[a._v("#")]),a._v(" 3.3 配置数据卷容器")]),a._v(" "),s("p",[a._v("​\t多容器进行数据交换：")]),a._v(" "),s("ol",[s("li",[a._v("多个容器挂载同一个数据卷")]),a._v(" "),s("li",[a._v("数据卷容器")])]),a._v(" "),s("p",[a._v("​\t"),s("strong",[a._v("配置数据卷容器：")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("创建启动c3数据卷容器，使用"),s("code",[a._v("-v")]),a._v("参数 设置数据卷")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c3 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /volume centos:7 /bin/bash\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建启动c1 c2容器，使用"),s("code",[a._v("--volumes-from")]),a._v("参数 设置数据卷")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c1 --volumes-from c3 centos:7 /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c2 --volumes-from c3 centos:7 /bin/bash\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"第四章-docker-应用部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-docker-应用部署"}},[a._v("#")]),a._v(" 第四章 Docker 应用部署")]),a._v(" "),s("h3",{attrs:{id:"_4-1-mysql部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-mysql部署"}},[a._v("#")]),a._v(" 4.1 MySQL部署")]),a._v(" "),s("h5",{attrs:{id:"_4-1-1案例-需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1案例-需求"}},[a._v("#")]),a._v(" 4.1.1案例：需求")]),a._v(" "),s("ul",[s("li",[a._v("在Docker 容器中部署MySQL，并通过外部MySQL 客户端操作MySQL Server")])]),a._v(" "),s("h5",{attrs:{id:"_4-1-2-案例-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-案例-实现"}},[a._v("#")]),a._v(" 4.1.2 案例：实现")]),a._v(" "),s("ol",[s("li",[a._v("搜索mysql镜像")]),a._v(" "),s("li",[a._v("拉取mysql镜像")]),a._v(" "),s("li",[a._v("创建容器")]),a._v(" "),s("li",[a._v("操作容器中的mysql")])]),a._v(" "),s("h5",{attrs:{id:"_4-1-3-问题及解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-问题及解决方案"}},[a._v("#")]),a._v(" 4.1.3 问题及解决方案")]),a._v(" "),s("ul",[s("li",[a._v("容器内的网络服务和外部机器不能直接通信")]),a._v(" "),s("li",[a._v("外部机器和宿主机可以直接通信")]),a._v(" "),s("li",[a._v("宿主机和容器可以直接通信")]),a._v(" "),s("li",[a._v("当容器中的网络服务需要被外部机器访问时，可以将容器中提供服务的端口映射到宿主机的端口上。外部机器访问宿主机的端口，从而间接访问容器的服务")]),a._v(" "),s("li",[a._v("这种操作称为：端口映射")])]),a._v(" "),s("h5",{attrs:{id:"_4-1-4-部署mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4-部署mysql"}},[a._v("#")]),a._v(" 4.1.4 部署MySQL")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("搜索mysql镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search mysql\n")])])])]),a._v(" "),s("li",[s("p",[a._v("拉取mysql镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull mysql:5.6\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建容器，设置端口映射、目录映射")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在/root目录下创建mysql目录用于存储mysql数据信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" ~/mysql\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/mysql\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3307")]),a._v(":3306 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c_mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/conf:/etc/mysql/conf.d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/logs:/logs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/data:/var/lib/mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123456")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nmysql:5.6\n")])])]),s("ul",[s("li",[a._v("参数说明\n"),s("ul",[s("li",[s("code",[a._v("-p 3307:3306")]),a._v("：将容器的3306端口映射到宿主机的3307端口")]),a._v(" "),s("li",[s("code",[a._v("--v $PWD/conf:/etc/mysql/conf.d")]),a._v("：将主机当前目录下的"),s("code",[a._v("conf/my.cnf")]),a._v("挂载到容器"),s("code",[a._v("/etc/mysql/my.cnf")]),a._v("配置目录")]),a._v(" "),s("li",[s("code",[a._v("-v $PWD/logs:/logs")]),a._v("：将主机当前目录下的"),s("code",[a._v("logs")]),a._v("目录挂载到容器的"),s("code",[a._v("/logs")]),a._v("目录日志")]),a._v(" "),s("li",[s("code",[a._v("-v $PWD/data:/var/lib/mysql")]),a._v("：将主机当前目录下的"),s("code",[a._v("data")]),a._v("目录挂载到容器的"),s("code",[a._v("/var/lib/mysql")]),a._v("数据目录")]),a._v(" "),s("li",[s("code",[a._v("-e MYSQL_ROOT_PASSWORD=123456")]),a._v("：初始化root 用户密码")])])])])]),a._v(" "),s("li",[s("p",[a._v("使用外部机器访问MySQL")])])]),a._v(" "),s("h3",{attrs:{id:"_4-2-tomcat部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-tomcat部署"}},[a._v("#")]),a._v(" 4.2 Tomcat部署")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("搜索Tomcat 镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search tomcat\n")])])])]),a._v(" "),s("li",[s("p",[a._v("拉取mysql镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull tomcat\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建容器，设置端口映射、目录映射")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在/root目录下创建tomcat目录用于存放tomcat数据信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" ~/tomcat\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/tomcat\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c_tomcat "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v(":/usr/local/tomcat/webapps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\ntomcat\n")])])]),s("ul",[s("li",[a._v("参数说明：\n"),s("ul",[s("li",[s("code",[a._v("-p 8080:8080")]),a._v("：将容器的8080端口映射到主机的8080端口")]),a._v(" "),s("li",[s("code",[a._v("-v $PWD:/usr/local/tomcat/webapps")]),a._v("：将主机中当前目录挂载到容器的"),s("code",[a._v("webapps")])])])])])]),a._v(" "),s("li",[s("p",[a._v("最后使用外部机器访问tomcat")])])]),a._v(" "),s("h3",{attrs:{id:"_4-3-nginx部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-nginx部署"}},[a._v("#")]),a._v(" 4.3 Nginx部署")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("搜索Nginx 镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search nginx\n")])])])]),a._v(" "),s("li",[s("p",[a._v("拉取mysql镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull nginx\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建容器，设置端口映射、目录映射")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在/root目录下创建nginx目录用于存储nginx数据信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" ~/nginx\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/nginx\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" conf\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" conf\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在~/nginx/conf/下创建nginx.conf文件，粘贴下面代码块的内容")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" nginx.conf\n")])])]),s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('user  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\t\n\tinclude /etc/nginx/conf.d/*.conf;\n}\n')])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c_nginx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/conf/nginx.conf:/etc/nginx/nginx.conf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/logs:/var/log/nginx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/html:/usr/share/nginx/html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nnginx\n")])])]),s("ul",[s("li",[a._v("参数说明：\n"),s("ul",[s("li",[s("code",[a._v("-p 80:80")]),a._v("：将容器的80端口映射到宿主机的80端口")]),a._v(" "),s("li",[s("code",[a._v("-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf")]),a._v("：将主机当前目录下的"),s("code",[a._v("/conf/nginx.conf")]),a._v("挂载到容器的"),s("code",[a._v(":/etc/nginx/nginx.conf")]),a._v("配置目录")]),a._v(" "),s("li",[s("code",[a._v("-v $PWD/html:/usr/share/nginx/html")]),a._v("：将主机当前目录挂载到容器的"),s("code",[a._v("/val/log/nginx")]),a._v("日志目录")])])])])]),a._v(" "),s("li",[s("p",[a._v("使用外部机器访问nginx")])])]),a._v(" "),s("h3",{attrs:{id:"_4-4-redis部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-redis部署"}},[a._v("#")]),a._v(" 4.4 Redis部署")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("搜索Redis 镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search redis\n")])])])]),a._v(" "),s("li",[s("p",[a._v("拉取Redis 镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull redis:5.0\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建容器，设置端口映射、目录映射")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("c_redis "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6379")]),a._v(":6379 redis:5.0\n")])])])]),a._v(" "),s("li",[s("p",[a._v("使用外部机器连接redis")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("redis-cli.exe "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".187.129 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6379")]),a._v("\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"第五章-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-dockerfile"}},[a._v("#")]),a._v(" 第五章 Dockerfile")]),a._v(" "),s("h3",{attrs:{id:"_5-1-docker-镜像原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-docker-镜像原理"}},[a._v("#")]),a._v(" 5.1 Docker 镜像原理")]),a._v(" "),s("p",[a._v("​\t思考：")]),a._v(" "),s("ul",[s("li",[a._v("Docker 镜像的本质是什么？\n"),s("ul",[s("li",[a._v("是一个分层的文件系统")])])]),a._v(" "),s("li",[a._v("Docker 中一个CentOS 镜像为什么只有200MB，而一个CentOS 操作系统的iso 文件要几个G？\n"),s("ul",[s("li",[a._v("CentOS的iso镜像文件包含bootfs和rootfs，而Docker的CentOS镜像复用操作系统的bootfs，只有rootfs和其他镜像层")])])]),a._v(" "),s("li",[a._v("Docker 中一个Tomcat 镜像为什么有500MB，而一个Tomcat 安装包只有70多MB？\n"),s("ul",[s("li",[a._v("由于Docker中镜像是分层的，tomcat虽然只有70多MB，但他需要依赖于父镜像和基础镜像，所以整个对外暴露的tomcat镜像大小500多MB")])])])]),a._v(" "),s("p",[a._v("操作系统组成部分：")]),a._v(" "),s("ul",[s("li",[a._v("进程调度子系统")]),a._v(" "),s("li",[a._v("进程通信子系统")]),a._v(" "),s("li",[a._v("内存管理子系统")]),a._v(" "),s("li",[a._v("设备管理子系统")]),a._v(" "),s("li",[a._v("文件管理子系统")]),a._v(" "),s("li",[a._v("网络通信子系统")]),a._v(" "),s("li",[a._v("作业控制子系统")])]),a._v(" "),s("p",[a._v("Linux文件系统由bootfs 和rootfs 两部分组成")]),a._v(" "),s("ul",[s("li",[a._v("bootfs：包含bootloader（引导加载程序）和kernel（内核）")]),a._v(" "),s("li",[a._v("rootfs：root文件系统，包含的就是典型的Linux 系统中的/dev、/proc、/bin等标准目录和文件")]),a._v(" "),s("li",[a._v("不同的Linux 发行版，bootfs 基本一样，而rootfs 不同，如ubuntu，CentOS等")])]),a._v(" "),s("p",[s("strong",[a._v("Docker 镜像原理：")])]),a._v(" "),s("ul",[s("li",[a._v("Docker 镜像是由特殊的文件系统叠加而成")]),a._v(" "),s("li",[a._v("最低端是bootfs，并使用宿主机的bootfs")]),a._v(" "),s("li",[a._v("第二层是root 文件系统rootfs ，称为base iamge")]),a._v(" "),s("li",[a._v("然后再往上可以叠加其他的镜像文件")]),a._v(" "),s("li",[a._v("统一文件系统（Union File System）技术能够将不同的层整合成一个文件系统，为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户的角度看来，只存在一个文件系统")]),a._v(" "),s("li",[a._v("一个镜像可以放在另一个镜像的上面。位于下面的镜像称为父镜像，最底部的镜像称为基础镜像")]),a._v(" "),s("li",[a._v("当从一个镜像启动容器时，Docker会在最顶层加载一个读写文件系统作为容器")])]),a._v(" "),s("p",[s("strong",[a._v("镜像制作：")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("容器转为镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" commit 容器id 镜像名称:版本号\n")])])]),s("div",{staticClass:"language-shel extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker save -o 压缩文件名称 镜像名称:版本号\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" load "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" 压缩文件名称\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_5-2-dockerfile-概念及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-dockerfile-概念及作用"}},[a._v("#")]),a._v(" 5.2 Dockerfile 概念及作用")]),a._v(" "),s("p",[s("strong",[a._v("Dockerfile 概念")])]),a._v(" "),s("ul",[s("li",[a._v("Dockerfile 是一个文本文件")]),a._v(" "),s("li",[a._v("包含了一条条的指令")]),a._v(" "),s("li",[a._v("每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像")]),a._v(" "),s("li",[a._v("对于开发人员，可以为开发团队提供一个完全一致的开发环境")]),a._v(" "),s("li",[a._v("对于测试人员，可以直接拿开发时所构建的镜像或者通过Dockerfile 文件构建一个新的镜像开始工作了")]),a._v(" "),s("li",[a._v("对于运维人员，在部署时，可以实现应用的无缝移植")])]),a._v(" "),s("h3",{attrs:{id:"_5-3-dockerfile-关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-dockerfile-关键字"}},[a._v("#")]),a._v(" 5.3 Dockerfile 关键字")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("关键字")]),a._v(" "),s("th",[a._v("作用")]),a._v(" "),s("th",{staticStyle:{"text-align":"left"}},[a._v("备注")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("FROM")]),a._v(" "),s("td",[a._v("指定父镜像")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定dockerfile基于哪个images构建")])]),a._v(" "),s("tr",[s("td",[a._v("MAINTAINER")]),a._v(" "),s("td",[a._v("作者信息")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("用来标明这个dockerfile 谁写的")])]),a._v(" "),s("tr",[s("td",[a._v("LABEL")]),a._v(" "),s("td",[a._v("标签")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("用来指明dockerfile 的标签，可以使用Label代替Maintainer 最终都是在docker image基本信息中嗯可以查看")])]),a._v(" "),s("tr",[s("td",[a._v("RUN")]),a._v(" "),s("td",[a._v("执行命令")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("执行一段命令 默认是"),s("code",[a._v("/bin/sh")]),a._v(" 格式："),s("code",[a._v("RUN command")]),a._v(" 或者 "),s("code",[a._v('RUN ["command","param1","param2"]')])])]),a._v(" "),s("tr",[s("td",[a._v("CMD")]),a._v(" "),s("td",[a._v("容器启动命令")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("提供启动容器时候的默认命令和ENTRYPOINT配合使用。格式："),s("code",[a._v("CMD command param1 param2")]),a._v("或者"),s("code",[a._v('CMD ["command","param1","param2"]')])])]),a._v(" "),s("tr",[s("td",[a._v("ENTRYPOINT")]),a._v(" "),s("td",[a._v("入口")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("一般在制作一些执行就关闭的容器中会使用")])]),a._v(" "),s("tr",[s("td",[a._v("COPY")]),a._v(" "),s("td",[a._v("复制文件")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("build 的时候复制文件到image中")])]),a._v(" "),s("tr",[s("td",[a._v("ADD")]),a._v(" "),s("td",[a._v("添加文件")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("build 的时候添加文件到iamge 中，不仅仅局限于当前build 上下文 可以来源于远程服务")])]),a._v(" "),s("tr",[s("td",[a._v("ENV")]),a._v(" "),s("td",[a._v("环境变量")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定build 时候的环境变量 可以在启动容器的时候 通过"),s("code",[a._v("-e")]),a._v("覆盖  格式："),s("code",[a._v("ENV name = value")])])]),a._v(" "),s("tr",[s("td",[a._v("ARG")]),a._v(" "),s("td",[a._v("构建参数")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("构建参数 只在构建的时候使用参时 如果有ENV 那么ENV 的相同名字的值始终覆盖ARG 的值")])]),a._v(" "),s("tr",[s("td",[a._v("VOLUME")]),a._v(" "),s("td",[a._v("定义外部可以挂载的数据卷")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定build 的image 那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用"),s("code",[a._v("-v")]),a._v("绑定 格式："),s("code",[a._v('VOLUME ["目录"]')])])]),a._v(" "),s("tr",[s("td",[a._v("EXPOSE")]),a._v(" "),s("td",[a._v("暴露端口")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("定义容器运行的时候监听的端口 启动容器的使用"),s("code",[a._v("-p")]),a._v("来绑定暴露端口 格式："),s("code",[a._v("EXPOSE 8080")]),a._v("或者"),s("code",[a._v("EXPOSE 8080/udp")])])]),a._v(" "),s("tr",[s("td",[a._v("WORKDIR")]),a._v(" "),s("td",[a._v("工作目录")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定容器内部的工作目录 如果没有创建则自动创建 如果指定/使用是绝对地址 如果不是/开头那么实在上一条workdir 的路径的相对路径")])]),a._v(" "),s("tr",[s("td",[a._v("USER")]),a._v(" "),s("td",[a._v("指定执行用户")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定build 或者启动的时候 用户 在RUN CMD ENTRYPOINT执行的时候的用户")])]),a._v(" "),s("tr",[s("td",[a._v("HEALTHCHECK")]),a._v(" "),s("td",[a._v("健康检查")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定监测当前容器的健康测试的命令 基本上没有 因为很多时候 应用本身由健康监测机制")])]),a._v(" "),s("tr",[s("td",[a._v("ONBUILD")]),a._v(" "),s("td",[a._v("触发器")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("当存在ONBUILD 关键字的镜像作为基础镜像的时候 当执行FROM 完成之后 会执行ONBUILD的命令 但是不影响当前镜像 用处也不怎么大")])]),a._v(" "),s("tr",[s("td",[a._v("STOPSIGNAL")]),a._v(" "),s("td",[a._v("发送信息量到宿主机")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出")])]),a._v(" "),s("tr",[s("td",[a._v("SHELL")]),a._v(" "),s("td",[a._v("指定执行脚本的shell")]),a._v(" "),s("td",{staticStyle:{"text-align":"left"}},[a._v("指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell")])])])]),a._v(" "),s("h3",{attrs:{id:"_5-4-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-案例"}},[a._v("#")]),a._v(" 5.4 案例")]),a._v(" "),s("h4",{attrs:{id:"_5-4-1-案例一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-案例一"}},[a._v("#")]),a._v(" 5.4.1 案例一")]),a._v(" "),s("p",[a._v("需求：")]),a._v(" "),s("p",[a._v("​\t自定义CentOS7镜像。要求：")]),a._v(" "),s("ol",[s("li",[a._v("默认登录路径为"),s("code",[a._v("/usr")])]),a._v(" "),s("li",[a._v("可以使用vim")])]),a._v(" "),s("p",[a._v("实现步骤：")]),a._v(" "),s("ol",[s("li",[a._v("定义父镜像："),s("code",[a._v("FROM centos:7")])]),a._v(" "),s("li",[a._v("定义作者信息："),s("code",[a._v("MAINTAINER crisp077 <www.crisp077.xyz>")])]),a._v(" "),s("li",[a._v("执行安装vim命令："),s("code",[a._v("RUN yum install -y vim")])]),a._v(" "),s("li",[a._v("定义默认的工作目录："),s("code",[a._v("WORKDIR /usr")])]),a._v(" "),s("li",[a._v("定义容器启动执行的命令："),s("code",[a._v("CMD /bin/bash")])])]),a._v(" "),s("p",[a._v("创建使用dockerfile的镜像：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" ./centos_docker "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" crisp_centos:1 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("h4",{attrs:{id:"_5-4-2-案例二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-案例二"}},[a._v("#")]),a._v(" 5.4.2 案例二")]),a._v(" "),s("p",[a._v("需求：")]),a._v(" "),s("p",[a._v("​\t定义dockerfile，发布springboot 项目")]),a._v(" "),s("p",[a._v("实现步骤：")]),a._v(" "),s("ol",[s("li",[a._v("定义父镜像："),s("code",[a._v("FROM java:8")])]),a._v(" "),s("li",[a._v("定义作者信息："),s("code",[a._v("MAINTAINER crisp077 <www.crisp077.xyz>")])]),a._v(" "),s("li",[a._v("将jar包添加到容器："),s("code",[a._v("ADD springboot.jar app.jar")])]),a._v(" "),s("li",[a._v("定义容器启动执行的命令："),s("code",[a._v("CMD java -jar app.jar")])]),a._v(" "),s("li",[a._v("通过dockerfile 构建镜像："),s("code",[a._v("docker build -f dockerfile文件路径 -t 镜像名称:版本")])])]),a._v(" "),s("h2",{attrs:{id:"第六章-docker-服务编排"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章-docker-服务编排"}},[a._v("#")]),a._v(" 第六章 Docker 服务编排")]),a._v(" "),s("h3",{attrs:{id:"_6-1-服务编排的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-服务编排的概念"}},[a._v("#")]),a._v(" 6.1 服务编排的概念")]),a._v(" "),s("p",[a._v("​\t微服务架构的应用系统中一般包含若干个微服务，每个微服务都会部署多个实例，如果每个微服务都要手动启动，维护工作量会很大")]),a._v(" "),s("ul",[s("li",[a._v("要从Dockerfile build image 或者去 dockerhub 拉取image")]),a._v(" "),s("li",[a._v("要创建多个container")]),a._v(" "),s("li",[a._v("要管理这些container（启动停止删除）")])]),a._v(" "),s("p",[s("strong",[a._v("服务编排：")])]),a._v(" "),s("p",[a._v("​\t按照一定的业务规则批量管理容器")]),a._v(" "),s("h3",{attrs:{id:"_6-2-dockers-compose-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-dockers-compose-概述"}},[a._v("#")]),a._v(" 6.2 Dockers Compose 概述")]),a._v(" "),s("p",[a._v("​\tDocker Compose 是一个编排多容器分布式部署的工具，提供命令集管理器化应用的完整开发期，包括服务构建，启动和停止。使用步骤：")]),a._v(" "),s("ol",[s("li",[a._v("利用 Dockerfile 定义运行环境镜像")]),a._v(" "),s("li",[a._v("使用 docker-compose.yml 定义组成应用的各服务")]),a._v(" "),s("li",[a._v("运行 docker-compose up 启动应用")])]),a._v(" "),s("h5",{attrs:{id:"_6-2-1-安装docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-安装docker-compose"}},[a._v("#")]),a._v(" 6.2.1 安装Docker Compose")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#Compose 目前已经完全支持Linux、MAC OS、Windows，在安装Compose之前，需要先安装Docker。下面以编译好的二进制包方式安装在Linux中")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://github.com/docker/compose/releases/download/1.22.0/docker-compose-"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'uname -s'")]),a._v("-"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'uname -m'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#设置文件可执行权限")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看版本信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-version")]),a._v("\n")])])]),s("h5",{attrs:{id:"_6-2-2-卸载docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-卸载docker-compose"}},[a._v("#")]),a._v(" 6.2.2 卸载Docker Compose")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#二进制包方式安装的，删除二进制文件即可")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" /usr/local/bin/docker-compose\n")])])]),s("h3",{attrs:{id:"_6-3-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-案例"}},[a._v("#")]),a._v(" 6.3 案例")]),a._v(" "),s("p",[s("strong",[a._v("使用docker compose编排nginx+springboot项目")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("创建docker-compose目录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" ~/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/docker-compose\n")])])])]),a._v(" "),s("li",[s("p",[a._v("编写"),s("code",[a._v("docker-compose.yml")]),a._v("文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("version: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3'")]),a._v("\nservices:\n  nginx:\n   iamge: nginx\n   ports:\n    - "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80\n   links:\n    - app\n   volumes:\n   \t- ./nginx/conf.d:/etc/nginx/conf.d\n   app:\n     image: app\n     expose:\n       - "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8080"')]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建"),s("code",[a._v("./nginx/conf.d")]),a._v("目录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" ./nginx/conf.d\n")])])])]),a._v(" "),s("li",[s("p",[a._v("在"),s("code",[a._v("./nginx/conf.d")]),a._v("目录下编写"),s("code",[a._v("crisp.conf")]),a._v("文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tlisten "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tacess_log off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\n\tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\tproxy_pass https://app:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("在"),s("code",[a._v("~/docker-compose")]),a._v("目录下 使用dockers-compose 启动容器")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up\n")])])])]),a._v(" "),s("li",[s("p",[a._v("测试访问")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("http://192.168.187.129/hello\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"第七章-docker-私有仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-docker-私有仓库"}},[a._v("#")]),a._v(" 第七章 Docker 私有仓库")]),a._v(" "),s("h3",{attrs:{id:"_7-1-搭建私有仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-搭建私有仓库"}},[a._v("#")]),a._v(" 7.1 搭建私有仓库")]),a._v(" "),s("p",[a._v("​\t"),s("strong",[a._v("Docker 私有仓库")])]),a._v(" "),s("ul",[s("li",[a._v("Docker 官方的Docker hub（https://hub.docker.com）是一个用于管理公共镜像的仓库，我们可以从上面拉取镜像到本地，也可以把我们自己的镜像推送上去。但是，有时候我们的服务器无法访问互联网，或者你不希望将自己的镜像放到公网当中，那么我们就需要搭建自己的私有仓库来存储和管理自己的镜像。")])]),a._v(" "),s("p",[s("strong",[a._v("私有仓库搭建")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("拉取私有仓库镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull registry\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动私有仓库容器")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("registry "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),a._v(":5000 registry\n")])])])]),a._v(" "),s("li",[s("p",[a._v("打开浏览器，输入地址"),s("code",[a._v("https://私有仓库服务器ip:5000/v2/_catalog")]),a._v("看到"),s("code",[a._v('{"repositories":[]}')]),a._v("表示私有仓库搭建成功")])]),a._v(" "),s("li",[s("p",[a._v("修改"),s("code",[a._v("deamon.json")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/docker/daemon.json\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在上述文件中添加一个key，保存退出。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#此步用于让docker信任私有仓库地址")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#注意将私有仓库服务器ip修改为自己私有仓库服务器真实ip")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"insecure-registries"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"私有仓库服务器ip:5000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("重启docker 服务")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start registry\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_7-2-上传镜像到私有仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-上传镜像到私有仓库"}},[a._v("#")]),a._v(" 7.2 上传镜像到私有仓库")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("标记镜像为私有仓库的镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" tag centos:7 私有仓库服务器ip:5000/centos:7\n")])])])]),a._v(" "),s("li",[s("p",[a._v("上传标记的镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" push 私有仓库服务器ip:5000/centos:7\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_7-3-从私有仓库拉取镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-从私有仓库拉取镜像"}},[a._v("#")]),a._v(" 7.3 从私有仓库拉取镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#拉取镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull 私有仓库服务器ip:5000/centos:7\n")])])]),s("h2",{attrs:{id:"第八章-docker-相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章-docker-相关概念"}},[a._v("#")]),a._v(" 第八章 Docker 相关概念")]),a._v(" "),s("p",[s("strong",[a._v("Docker容器虚拟化 与 传统虚拟机比较")])]),a._v(" "),s("p",[a._v("容器就是将软件打包成标准化单元，以用于开发、交付和部署")]),a._v(" "),s("ul",[s("li",[a._v("容器镜像是轻量级的、可执行的独立软件包，包含软件运行所需要的所有内容：代码、运行时环境、系统工具、系统库和设置")]),a._v(" "),s("li",[a._v("容器化软件在任何环境中都能够始终如一地运行")]),a._v(" "),s("li",[a._v("容器赋予了软件独立性，使其免受外在环境差异的影响，从而有助于减少团队间在相同基础设施上运行不同软件时的冲突")])]),a._v(" "),s("p",[s("strong",[a._v("相同：")])]),a._v(" "),s("ul",[s("li",[a._v("容器和虚拟机具有相似的资源隔离和分配优势")])]),a._v(" "),s("p",[s("strong",[a._v("不同：")])]),a._v(" "),s("ul",[s("li",[a._v("容器虚拟化的是操作系统，虚拟机虚拟化的时硬件")]),a._v(" "),s("li",[a._v("传统的虚拟机可以运行不同的操作系统，容器只能运行同一类型的操作系统")])]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("特性")]),a._v(" "),s("th",[a._v("容器")]),a._v(" "),s("th",[a._v("虚拟机")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("启动")]),a._v(" "),s("td",[a._v("秒级")]),a._v(" "),s("td",[a._v("分钟级")])]),a._v(" "),s("tr",[s("td",[a._v("性能")]),a._v(" "),s("td",[a._v("接近原生")]),a._v(" "),s("td",[a._v("弱于")])]),a._v(" "),s("tr",[s("td",[a._v("系统支持两")]),a._v(" "),s("td",[a._v("单机支持上千个容器")]),a._v(" "),s("td",[a._v("一般几十个")])])])]),a._v(" "),s("blockquote",[s("p",[a._v("本讲义由B站菜鸟程序员视频教程"),s("code",[a._v("BV1CJ411T7BK")]),a._v("整理优化得到")])])])}),[],!1,null,null,null);s.default=r.exports}}]);